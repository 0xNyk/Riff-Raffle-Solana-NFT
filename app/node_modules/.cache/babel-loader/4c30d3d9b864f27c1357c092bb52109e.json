{"ast":null,"code":"import { PublicKey } from '@solana/web3.js';\nimport { BinaryReader, BinaryWriter } from 'borsh';\nimport base58 from 'bs58';\nexport const extendBorsh = () => {\n  BinaryReader.prototype.readPubkey = function () {\n    const reader = this;\n    const array = reader.readFixedArray(32);\n    return new PublicKey(array);\n  };\n\n  BinaryWriter.prototype.writePubkey = function (value) {\n    const writer = this;\n    writer.writeFixedArray(value.toBuffer());\n  };\n\n  BinaryReader.prototype.readPubkeyAsString = function () {\n    const reader = this;\n    const array = reader.readFixedArray(32);\n    return base58.encode(array);\n  };\n\n  BinaryWriter.prototype.writePubkeyAsString = function (value) {\n    const writer = this;\n    writer.writeFixedArray(base58.decode(value));\n  };\n};","map":{"version":3,"sources":["C:/Riff-Raffle-Solana-NFT build 1-1/app/src/lib/metadata/borsh.ts"],"names":["PublicKey","BinaryReader","BinaryWriter","base58","extendBorsh","prototype","readPubkey","reader","array","readFixedArray","writePubkey","value","writer","writeFixedArray","toBuffer","readPubkeyAsString","encode","writePubkeyAsString","decode"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,MAAnB;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC9BH,EAAAA,YAAY,CAACI,SAAd,CAAgCC,UAAhC,GAA6C,YAAY;AACvD,UAAMC,MAAM,GAAG,IAAf;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,cAAP,CAAsB,EAAtB,CAAd;AACA,WAAO,IAAIT,SAAJ,CAAcQ,KAAd,CAAP;AACD,GAJD;;AAMCN,EAAAA,YAAY,CAACG,SAAd,CAAgCK,WAAhC,GAA8C,UAAUC,KAAV,EAA4B;AACxE,UAAMC,MAAM,GAAG,IAAf;AACAA,IAAAA,MAAM,CAACC,eAAP,CAAuBF,KAAK,CAACG,QAAN,EAAvB;AACD,GAHD;;AAKCb,EAAAA,YAAY,CAACI,SAAd,CAAgCU,kBAAhC,GAAqD,YAAY;AAC/D,UAAMR,MAAM,GAAG,IAAf;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,cAAP,CAAsB,EAAtB,CAAd;AACA,WAAON,MAAM,CAACa,MAAP,CAAcR,KAAd,CAAP;AACD,GAJD;;AAMCN,EAAAA,YAAY,CAACG,SAAd,CAAgCY,mBAAhC,GAAsD,UACpDN,KADoD,EAEpD;AACA,UAAMC,MAAM,GAAG,IAAf;AACAA,IAAAA,MAAM,CAACC,eAAP,CAAuBV,MAAM,CAACe,MAAP,CAAcP,KAAd,CAAvB;AACD,GALD;AAMD,CAxBM","sourcesContent":["import { PublicKey } from '@solana/web3.js';\r\nimport { BinaryReader, BinaryWriter } from 'borsh';\r\nimport base58 from 'bs58';\r\nimport { StringPublicKey } from './utils';\r\n\r\nexport const extendBorsh = () => {\r\n  (BinaryReader.prototype as any).readPubkey = function () {\r\n    const reader = this as unknown as BinaryReader;\r\n    const array = reader.readFixedArray(32);\r\n    return new PublicKey(array);\r\n  };\r\n\r\n  (BinaryWriter.prototype as any).writePubkey = function (value: PublicKey) {\r\n    const writer = this as unknown as BinaryWriter;\r\n    writer.writeFixedArray(value.toBuffer());\r\n  };\r\n\r\n  (BinaryReader.prototype as any).readPubkeyAsString = function () {\r\n    const reader = this as unknown as BinaryReader;\r\n    const array = reader.readFixedArray(32);\r\n    return base58.encode(array) as StringPublicKey;\r\n  };\r\n\r\n  (BinaryWriter.prototype as any).writePubkeyAsString = function (\r\n    value: StringPublicKey,\r\n  ) {\r\n    const writer = this as unknown as BinaryWriter;\r\n    writer.writeFixedArray(base58.decode(value));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}