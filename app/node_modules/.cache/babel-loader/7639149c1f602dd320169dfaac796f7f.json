{"ast":null,"code":"var _jsxFileName = \"C:\\\\Riff-Raffle-Solana-NFT build 1-1\\\\app\\\\src\\\\components\\\\layout\\\\Drawer\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { IconButton, SwipeableDrawer } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport WalletButton from '../WalletButton';\nimport { useStyles } from './styles';\nimport NavButton from '../NavButton';\nimport { useLocation } from 'react-router';\nimport { isAdmin } from '../../AdminRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Drawer = ({\n  wallet,\n  isOpen,\n  setIsOpen,\n  navLinksList\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    pathname\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n    anchor: 'left',\n    className: classes.root,\n    classes: {\n      paper: classes.paper\n    },\n    open: isOpen,\n    onClose: () => setIsOpen(false),\n    onOpen: () => setIsOpen(true),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.drawerHeader,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        size: 'medium',\n        onClick: () => setIsOpen(false),\n        children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.drawerContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.walletButtonContainer,\n        children: /*#__PURE__*/_jsxDEV(WalletButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.navButtonsContainer,\n        children: navLinksList.filter(({\n          admin\n        }) => !admin || admin && isAdmin(wallet)).map(navLink => /*#__PURE__*/_jsxDEV(NavButton, {\n          label: navLink.label,\n          target: navLink.target,\n          onClick: () => setIsOpen(false),\n          isCurrent: navLink.target === pathname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Drawer, \"E+wlVBiBFLacLDFxfVN4qZ7Y7xc=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = Drawer;\nexport default Drawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drawer\");","map":{"version":3,"sources":["C:/Riff-Raffle-Solana-NFT build 1-1/app/src/components/layout/Drawer/index.tsx"],"names":["React","IconButton","SwipeableDrawer","Close","WalletButton","useStyles","NavButton","useLocation","isAdmin","Drawer","wallet","isOpen","setIsOpen","navLinksList","classes","pathname","root","paper","drawerHeader","drawerContent","walletButtonContainer","navButtonsContainer","filter","admin","map","navLink","label","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,mBAA5C;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAUA,MAAMC,MAAuB,GAAG,CAAC;AAC/BC,EAAAA,MAD+B;AAE/BC,EAAAA,MAF+B;AAG/BC,EAAAA,SAH+B;AAI/BC,EAAAA;AAJ+B,CAAD,KAK1B;AAAA;;AACJ,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeR,WAAW,EAAhC;AAEA,sBACE,QAAC,eAAD;AACE,IAAA,MAAM,EAAE,MADV;AAEE,IAAA,SAAS,EAAEO,OAAO,CAACE,IAFrB;AAGE,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAEH,OAAO,CAACG;AAAjB,KAHX;AAIE,IAAA,IAAI,EAAEN,MAJR;AAKE,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAL1B;AAME,IAAA,MAAM,EAAE,MAAMA,SAAS,CAAC,IAAD,CANzB;AAAA,4BAQE;AAAK,MAAA,SAAS,EAAEE,OAAO,CAACI,YAAxB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE,QAAlB;AAA4B,QAAA,OAAO,EAAE,MAAMN,SAAS,CAAC,KAAD,CAApD;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAaE;AAAK,MAAA,SAAS,EAAEE,OAAO,CAACK,aAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEL,OAAO,CAACM,qBAAxB;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACO,mBAAxB;AAAA,kBACGR,YAAY,CACVS,MADF,CACS,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAe,CAACA,KAAD,IAAWA,KAAK,IAAIf,OAAO,CAACE,MAAD,CADnD,EAEEc,GAFF,CAEOC,OAAD,iBACH,QAAC,SAAD;AACE,UAAA,KAAK,EAAEA,OAAO,CAACC,KADjB;AAEE,UAAA,MAAM,EAAED,OAAO,CAACE,MAFlB;AAGE,UAAA,OAAO,EAAE,MAAMf,SAAS,CAAC,KAAD,CAH1B;AAIE,UAAA,SAAS,EAAEa,OAAO,CAACE,MAAR,KAAmBZ;AAJhC;AAAA;AAAA;AAAA;AAAA,gBAHH;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA1CD;;GAAMN,M;UAMYJ,S,EACKE,W;;;KAPjBE,M;AA4CN,eAAeA,MAAf","sourcesContent":["import React, { FC } from 'react';\r\nimport { IconButton, SwipeableDrawer } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\n\r\nimport WalletButton from '../WalletButton';\r\nimport { useStyles } from './styles';\r\nimport NavButton from '../NavButton';\r\nimport { useLocation } from 'react-router';\r\nimport { isAdmin } from '../../AdminRoute';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nexport interface DrawerProps {\r\n  wallet: PublicKey | null;\r\n  isOpen: boolean;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  navLinksList: { label: string; target: string; admin?: boolean }[];\r\n}\r\n\r\nconst Drawer: FC<DrawerProps> = ({\r\n  wallet,\r\n  isOpen,\r\n  setIsOpen,\r\n  navLinksList,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor={'left'}\r\n      className={classes.root}\r\n      classes={{ paper: classes.paper }}\r\n      open={isOpen}\r\n      onClose={() => setIsOpen(false)}\r\n      onOpen={() => setIsOpen(true)}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton size={'medium'} onClick={() => setIsOpen(false)}>\r\n          <Close />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.drawerContent}>\r\n        <div className={classes.walletButtonContainer}>\r\n          <WalletButton />\r\n        </div>\r\n        <div className={classes.navButtonsContainer}>\r\n          {navLinksList\r\n            .filter(({ admin }) => !admin || (admin && isAdmin(wallet)))\r\n            .map((navLink) => (\r\n              <NavButton\r\n                label={navLink.label}\r\n                target={navLink.target}\r\n                onClick={() => setIsOpen(false)}\r\n                isCurrent={navLink.target === pathname}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n\r\nexport default Drawer;\r\n"]},"metadata":{},"sourceType":"module"}