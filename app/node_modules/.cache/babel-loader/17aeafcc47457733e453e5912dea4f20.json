{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{utils}from'@project-serum/anchor';import{getTokenAccount}from'@project-serum/common';import{ASSOCIATED_TOKEN_PROGRAM_ID,Token,TOKEN_PROGRAM_ID}from'@solana/spl-token';import*as math from'mathjs';export var getWalletLamports=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider){var walletAccount;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(provider.wallet.publicKey){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return provider.connection.getAccountInfo(provider.wallet.publicKey);case 4:walletAccount=_context.sent;return _context.abrupt(\"return\",walletAccount===null||walletAccount===void 0?void 0:walletAccount.lamports);case 6:case\"end\":return _context.stop();}}},_callee);}));return function getWalletLamports(_x){return _ref.apply(this,arguments);};}();export var getBuyerATABalance=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(provider,proceedsMint){var buyerATA,accountInfo;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Token.getAssociatedTokenAddress(ASSOCIATED_TOKEN_PROGRAM_ID,TOKEN_PROGRAM_ID,proceedsMint,provider.wallet.publicKey);case 2:buyerATA=_context2.sent;_context2.prev=3;_context2.next=6;return getTokenAccount(provider,buyerATA);case 6:accountInfo=_context2.sent;return _context2.abrupt(\"return\",accountInfo.amount);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](3);console.error(_context2.t0);return _context2.abrupt(\"return\");case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[3,10]]);}));return function getBuyerATABalance(_x2,_x3){return _ref2.apply(this,arguments);};}();export var getDisplayAmount=function getDisplayAmount(amount,mint){return math.bignumber(amount.toString()).div(Math.pow(10,mint.decimals)).toString();};export var getAssociatedTokenAccountAddress=function getAssociatedTokenAccountAddress(walletAddress,mint){return Token.getAssociatedTokenAddress(ASSOCIATED_TOKEN_PROGRAM_ID,TOKEN_PROGRAM_ID,mint,walletAddress);};export var findAssociatedTokenAccountAddressSync=function findAssociatedTokenAccountAddressSync(walletAddress,mint){return utils.publicKey.findProgramAddressSync([walletAddress.toBuffer(),TOKEN_PROGRAM_ID.toBuffer(),mint.toBuffer()],ASSOCIATED_TOKEN_PROGRAM_ID);};export var createOwnAssociatedTokenAccountInstruction=function createOwnAssociatedTokenAccountInstruction(mint,ata,owner){return Token.createAssociatedTokenAccountInstruction(ASSOCIATED_TOKEN_PROGRAM_ID,TOKEN_PROGRAM_ID,mint,ata,owner,owner);};","map":null,"metadata":{},"sourceType":"module"}