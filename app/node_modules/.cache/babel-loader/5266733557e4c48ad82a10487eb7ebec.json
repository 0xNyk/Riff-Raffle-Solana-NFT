{"ast":null,"code":"import { u64 } from '@solana/spl-token';\nexport const shortenPubkeyString = (pubkey, sidesLength = 4) => {\n  const keyString = pubkey.toString();\n  const keyLength = keyString.length;\n  return `${keyString.substr(0, sidesLength)}...${keyString.substr(keyLength - sidesLength, keyLength)}`;\n};\nexport function notify({\n  message,\n  description\n}) {\n  console.log(`${message}, ${description}`);\n}\nexport const areEqualObjects = (account1, account2) => JSON.stringify(account1) === JSON.stringify(account2);\nexport const getRemainingTime = (now, end) => {\n  const dt = end.getTime() - now.getTime();\n  if (dt < 0) return {\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  let days = Math.floor(dt / (1000 * 60 * 60 * 24));\n  let hours = Math.floor(dt % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  let minutes = Math.floor(dt % (1000 * 60 * 60) / (1000 * 60));\n  let seconds = Math.floor(dt % (1000 * 60) / 1000);\n  return {\n    days,\n    hours,\n    minutes,\n    seconds\n  };\n};\nexport const sleep = ms => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}; // const bitSlicing = () => {};\n\nexport const computeTotalTicketsBought = raffle => [...raffle.entrants.values()].reduce((total, entrant) => total.add(new u64(entrant.tickets.length)), new u64(0));\nexport const debounce = (func, timeout = 300) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}; // https://stackoverflow.com/questions/1322732/convert-seconds-to-hh-mm-ss-with-javascript\n\nexport const toHHMMSS = secs => {\n  const hours = Math.floor(secs / 3600);\n  const minutes = Math.floor(secs / 60) % 60;\n  const seconds = secs % 60;\n  return [hours, minutes, seconds].map(v => v < 10 ? '0' + v : v).filter((v, i) => v !== '00' || i > 0).join(':');\n};","map":{"version":3,"sources":["C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT/app/src/lib/utils/index.ts"],"names":["u64","shortenPubkeyString","pubkey","sidesLength","keyString","toString","keyLength","length","substr","notify","message","description","console","log","areEqualObjects","account1","account2","JSON","stringify","getRemainingTime","now","end","dt","getTime","days","hours","minutes","seconds","Math","floor","sleep","ms","Promise","resolve","setTimeout","computeTotalTicketsBought","raffle","entrants","values","reduce","total","entrant","add","tickets","debounce","func","timeout","timer","args","clearTimeout","apply","toHHMMSS","secs","map","v","filter","i","join"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AAIA,OAAO,MAAMC,mBAAmB,GAAG,CACjCC,MADiC,EAEjCC,WAAmB,GAAG,CAFW,KAG9B;AACH,QAAMC,SAAS,GAAGF,MAAM,CAACG,QAAP,EAAlB;AACA,QAAMC,SAAS,GAAGF,SAAS,CAACG,MAA5B;AACA,SAAQ,GAAEH,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoBL,WAApB,CAAiC,MAAKC,SAAS,CAACI,MAAV,CAC9CF,SAAS,GAAGH,WADkC,EAE9CG,SAF8C,CAG9C,EAHF;AAID,CAVM;AAYP,OAAO,SAASG,MAAT,CAAgB;AACrBC,EAAAA,OADqB;AAErBC,EAAAA;AAFqB,CAAhB,EAMJ;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAEH,OAAQ,KAAIC,WAAY,EAAvC;AACD;AAED,OAAO,MAAMG,eAAe,GAAG,CAACC,QAAD,EAAgBC,QAAhB,KAC7BC,IAAI,CAACC,SAAL,CAAeH,QAAf,MAA6BE,IAAI,CAACC,SAAL,CAAeF,QAAf,CADxB;AAGP,OAAO,MAAMG,gBAAgB,GAAG,CAACC,GAAD,EAAYC,GAAZ,KAA0B;AACxD,QAAMC,EAAE,GAAGD,GAAG,CAACE,OAAJ,KAAgBH,GAAG,CAACG,OAAJ,EAA3B;AACA,MAAID,EAAE,GAAG,CAAT,EAAY,OAAO;AAAEE,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,KAAK,EAAE,CAAlB;AAAqBC,IAAAA,OAAO,EAAE,CAA9B;AAAiCC,IAAAA,OAAO,EAAE;AAA1C,GAAP;AACZ,MAAIH,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWP,EAAE,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAb,CAAX;AACA,MAAIG,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAYP,EAAE,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAH,IAAgC,OAAO,EAAP,GAAY,EAA5C,CAAX,CAAZ;AACA,MAAII,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAYP,EAAE,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAH,IAA2B,OAAO,EAAlC,CAAX,CAAd;AACA,MAAIK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYP,EAAE,IAAI,OAAO,EAAX,CAAH,GAAqB,IAAhC,CAAd;AACA,SAAO;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,GAAP;AACD,CARM;AAUP,OAAO,MAAMG,KAAK,GAAIC,EAAD,IAAgB;AACnC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAP;AACD,CAFM,C,CAIP;;AAEA,OAAO,MAAMI,yBAAyB,GAAIC,MAAD,IACvC,CAAC,GAAGA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAJ,EAA8BC,MAA9B,CACE,CAACC,KAAD,EAAQC,OAAR,KAAoBD,KAAK,CAACE,GAAN,CAAU,IAAI1C,GAAJ,CAAQyC,OAAO,CAACE,OAAR,CAAgBpC,MAAxB,CAAV,CADtB,EAEE,IAAIP,GAAJ,CAAQ,CAAR,CAFF,CADK;AAMP,OAAO,MAAM4C,QAAQ,GAAG,CAACC,IAAD,EAAiBC,OAAO,GAAG,GAA3B,KAAmC;AACzD,MAAIC,KAAJ;AACA,SAAO,CAAC,GAAGC,IAAJ,KAAkB;AACvBC,IAAAA,YAAY,CAACF,KAAD,CAAZ;AACAA,IAAAA,KAAK,GAAGb,UAAU,CAAC,MAAM;AACvBW,MAAAA,IAAI,CAACK,KAAL,CAAW,IAAX,EAAiBF,IAAjB;AACD,KAFiB,EAEfF,OAFe,CAAlB;AAGD,GALD;AAMD,CARM,C,CAUP;;AACA,OAAO,MAAMK,QAAQ,GAAIC,IAAD,IAAkB;AACxC,QAAM3B,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWuB,IAAI,GAAG,IAAlB,CAAd;AACA,QAAM1B,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWuB,IAAI,GAAG,EAAlB,IAAwB,EAAxC;AACA,QAAMzB,OAAO,GAAGyB,IAAI,GAAG,EAAvB;AAEA,SAAO,CAAC3B,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EACJ0B,GADI,CACCC,CAAD,IAAQA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAD3B,EAEJC,MAFI,CAEG,CAACD,CAAD,EAAIE,CAAJ,KAAUF,CAAC,KAAK,IAAN,IAAcE,CAAC,GAAG,CAF/B,EAGJC,IAHI,CAGC,GAHD,CAAP;AAID,CATM","sourcesContent":["import { u64 } from '@solana/spl-token';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { Raffle } from '../types';\r\n\r\nexport const shortenPubkeyString = (\r\n  pubkey: PublicKey,\r\n  sidesLength: number = 4\r\n) => {\r\n  const keyString = pubkey.toString();\r\n  const keyLength = keyString.length;\r\n  return `${keyString.substr(0, sidesLength)}...${keyString.substr(\r\n    keyLength - sidesLength,\r\n    keyLength\r\n  )}`;\r\n};\r\n\r\nexport function notify({\r\n  message,\r\n  description,\r\n}: {\r\n  message: string;\r\n  description: string;\r\n}) {\r\n  console.log(`${message}, ${description}`);\r\n}\r\n\r\nexport const areEqualObjects = (account1: any, account2: any) =>\r\n  JSON.stringify(account1) === JSON.stringify(account2);\r\n\r\nexport const getRemainingTime = (now: Date, end: Date) => {\r\n  const dt = end.getTime() - now.getTime();\r\n  if (dt < 0) return { days: 0, hours: 0, minutes: 0, seconds: 0 };\r\n  let days = Math.floor(dt / (1000 * 60 * 60 * 24));\r\n  let hours = Math.floor((dt % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  let minutes = Math.floor((dt % (1000 * 60 * 60)) / (1000 * 60));\r\n  let seconds = Math.floor((dt % (1000 * 60)) / 1000);\r\n  return { days, hours, minutes, seconds };\r\n};\r\n\r\nexport const sleep = (ms: number) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\n// const bitSlicing = () => {};\r\n\r\nexport const computeTotalTicketsBought = (raffle: Raffle) =>\r\n  [...raffle.entrants.values()].reduce(\r\n    (total, entrant) => total.add(new u64(entrant.tickets.length)),\r\n    new u64(0)\r\n  );\r\n\r\nexport const debounce = (func: Function, timeout = 300) => {\r\n  let timer: NodeJS.Timeout;\r\n  return (...args: any) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      func.apply(this, args);\r\n    }, timeout);\r\n  };\r\n};\r\n\r\n// https://stackoverflow.com/questions/1322732/convert-seconds-to-hh-mm-ss-with-javascript\r\nexport const toHHMMSS = (secs: number) => {\r\n  const hours = Math.floor(secs / 3600);\r\n  const minutes = Math.floor(secs / 60) % 60;\r\n  const seconds = secs % 60;\r\n\r\n  return [hours, minutes, seconds]\r\n    .map((v) => (v < 10 ? '0' + v : v))\r\n    .filter((v, i) => v !== '00' || i > 0)\r\n    .join(':');\r\n};\r\n"]},"metadata":{},"sourceType":"module"}