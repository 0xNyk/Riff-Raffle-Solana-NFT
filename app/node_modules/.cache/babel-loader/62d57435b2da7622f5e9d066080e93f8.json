{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kroni\\\\Desktop\\\\RIFF RAFFLE SITE PNSC\\\\Riff-Raffle-Solana-NFT final\\\\app\\\\src\\\\pages\\\\RaffleEndedScreen\\\\components\\\\PrizeGalleryEnded\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport ClaimButton from '../../../../components/ClaimButton';\nimport PrizeCardEnded from '../PrizeCardEnded';\nimport useCommonStyles from '../../../../assets/styles';\nimport { useStyles } from './styles';\nimport { useViewport } from '../../../../hooks/useViewport';\nimport { DeviceType } from '../../../../providers/ViewportProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrizeGalleryEnded = ({\n  raffle,\n  entrantWinningTickets,\n  winningTickets,\n  claimPrize,\n  scrollRef\n}) => {\n  _s();\n\n  const {\n    device\n  } = useViewport();\n  const classes = { ...useCommonStyles(),\n    ...useStyles({\n      device\n    })\n  };\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      ref: scrollRef,\n      container: true,\n      justifyContent: 'space-between',\n      direction: device === DeviceType.Phone ? 'column' : 'row',\n      className: classes.prizesGrid,\n      children: raffle.prizes.map((prize, prizeIndex) => {\n        const ticketIndex = winningTickets[prizeIndex];\n        const isWon = entrantWinningTickets.some(entrantWinningTicket => entrantWinningTicket.ticketIndex === ticketIndex);\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.prizeItem,\n          children: [/*#__PURE__*/_jsxDEV(PrizeCardEnded, {\n            prize: prize,\n            raffle: raffle,\n            ...(prize.amount.isZero() ? {\n              badgeText: 'Claimed'\n            } : {}),\n            index: prizeIndex,\n            winner: ticketIndex\n          }, prizeIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), isWon && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.claimButtonContainer,\n            children: /*#__PURE__*/_jsxDEV(ClaimButton, {\n              claimPrize: claimPrize,\n              prize: prize,\n              prizeIndex: prizeIndex,\n              ticketIndex: ticketIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, prizeIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrizeGalleryEnded, \"YfdHAQkYmv7Li3EiTNV3em8xGqE=\", false, function () {\n  return [useViewport, useCommonStyles, useStyles];\n});\n\n_c = PrizeGalleryEnded;\nexport default PrizeGalleryEnded;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrizeGalleryEnded\");","map":{"version":3,"sources":["C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/src/pages/RaffleEndedScreen/components/PrizeGalleryEnded/index.tsx"],"names":["useEffect","Grid","ClaimButton","PrizeCardEnded","useCommonStyles","useStyles","useViewport","DeviceType","PrizeGalleryEnded","raffle","entrantWinningTickets","winningTickets","claimPrize","scrollRef","device","classes","window","scrollTo","root","Phone","prizesGrid","prizes","map","prize","prizeIndex","ticketIndex","isWon","some","entrantWinningTicket","prizeItem","amount","isZero","badgeText","claimButtonContainer"],"mappings":";;;AAAA,SAAwBA,SAAxB,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,mBAArB;AAGA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,UAAT,QAA2B,wCAA3B;;;AAUA,MAAMC,iBAA6C,GAAG,CAAC;AACrDC,EAAAA,MADqD;AAErDC,EAAAA,qBAFqD;AAGrDC,EAAAA,cAHqD;AAIrDC,EAAAA,UAJqD;AAKrDC,EAAAA;AALqD,CAAD,KAMhD;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAaR,WAAW,EAA9B;AACA,QAAMS,OAAO,GAAG,EAAE,GAAGX,eAAe,EAApB;AAAwB,OAAIC,SAAS,CAAC;AAAES,MAAAA;AAAF,KAAD;AAArC,GAAhB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACG,IAAxB;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,GAAG,EAAEL,SADP;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,cAAc,EAAE,eAHlB;AAIE,MAAA,SAAS,EAAEC,MAAM,KAAKP,UAAU,CAACY,KAAtB,GAA8B,QAA9B,GAAyC,KAJtD;AAKE,MAAA,SAAS,EAAEJ,OAAO,CAACK,UALrB;AAAA,gBAOGX,MAAM,CAACY,MAAP,CAAcC,GAAd,CAAkB,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACxC,cAAMC,WAAW,GAAGd,cAAc,CAACa,UAAD,CAAlC;AACA,cAAME,KAAK,GAAGhB,qBAAqB,CAACiB,IAAtB,CACXC,oBAAD,IACEA,oBAAoB,CAACH,WAArB,KAAqCA,WAF3B,CAAd;AAKA,4BACE,QAAC,IAAD;AAAuB,UAAA,IAAI,MAA3B;AAA4B,UAAA,SAAS,EAAEV,OAAO,CAACc,SAA/C;AAAA,kCACE,QAAC,cAAD;AAEE,YAAA,KAAK,EAAEN,KAFT;AAGE,YAAA,MAAM,EAAEd,MAHV;AAAA,gBAIOc,KAAK,CAACO,MAAN,CAAaC,MAAb,KAAwB;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAxB,GAAmD,EAJ1D;AAKE,YAAA,KAAK,EAAER,UALT;AAME,YAAA,MAAM,EAAEC;AANV,aACOD,UADP;AAAA;AAAA;AAAA;AAAA,kBADF,EASGE,KAAK,iBACJ;AAAK,YAAA,SAAS,EAAEX,OAAO,CAACkB,oBAAxB;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,UAAU,EAAErB,UADd;AAEE,cAAA,KAAK,EAAEW,KAFT;AAGE,cAAA,UAAU,EAAEC,UAHd;AAIE,cAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA,WAAWD,UAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAsBD,OA7BA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CAxDD;;GAAMhB,iB;UAOeF,W,EACEF,e,EAAuBC,S;;;KARxCG,iB;AA0DN,eAAeA,iBAAf","sourcesContent":["import { FC, RefObject, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { Raffle } from '../../../../lib/types';\r\nimport ClaimButton from '../../../../components/ClaimButton';\r\nimport PrizeCardEnded from '../PrizeCardEnded';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../../../hooks/useViewport';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\ninterface PrizeGalleryEndedProps {\r\n  raffle: Raffle;\r\n  entrantWinningTickets: { prizeIndex: number; ticketIndex: number }[];\r\n  winningTickets: number[];\r\n  claimPrize: (prizeIndex: number, ticketIndex: number) => Promise<void>;\r\n  scrollRef: RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst PrizeGalleryEnded: FC<PrizeGalleryEndedProps> = ({\r\n  raffle,\r\n  entrantWinningTickets,\r\n  winningTickets,\r\n  claimPrize,\r\n  scrollRef,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        ref={scrollRef}\r\n        container\r\n        justifyContent={'space-between'}\r\n        direction={device === DeviceType.Phone ? 'column' : 'row'}\r\n        className={classes.prizesGrid}\r\n      >\r\n        {raffle.prizes.map((prize, prizeIndex) => {\r\n          const ticketIndex = winningTickets[prizeIndex];\r\n          const isWon = entrantWinningTickets.some(\r\n            (entrantWinningTicket) =>\r\n              entrantWinningTicket.ticketIndex === ticketIndex\r\n          );\r\n\r\n          return (\r\n            <Grid key={prizeIndex} item className={classes.prizeItem}>\r\n              <PrizeCardEnded\r\n                key={prizeIndex}\r\n                prize={prize}\r\n                raffle={raffle}\r\n                {...(prize.amount.isZero() ? { badgeText: 'Claimed' } : {})}\r\n                index={prizeIndex}\r\n                winner={ticketIndex}\r\n              />\r\n              {isWon && (\r\n                <div className={classes.claimButtonContainer}>\r\n                  <ClaimButton\r\n                    claimPrize={claimPrize}\r\n                    prize={prize}\r\n                    prizeIndex={prizeIndex}\r\n                    ticketIndex={ticketIndex}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrizeGalleryEnded;\r\n"]},"metadata":{},"sourceType":"module"}