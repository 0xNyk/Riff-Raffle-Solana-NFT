{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kroni\\\\Desktop\\\\RIFF RAFFLE SITE PNSC\\\\Riff-Raffle-Solana-NFT\\\\app\\\\src\\\\pages\\\\ExploreRafflesScreen\\\\components\\\\FilterBar\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox } from '@material-ui/core';\nimport SwitchSelector from 'react-switch-selector';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useStyles } from './styles';\nimport { useViewport } from '../../../../hooks/useViewport';\nimport { DeviceType } from '../../../../providers/ViewportProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilterBar = ({\n  hideEndedRaffles,\n  setHideEndedRaffles,\n  setShowOwnRafflesOnly\n}) => {\n  _s();\n\n  const {\n    device\n  } = useViewport();\n  const classes = useStyles({\n    device\n  });\n  const theme = useTheme();\n  const {\n    connected\n  } = useWallet();\n  const options = [{\n    label: 'ALL',\n    value: false\n  }, {\n    label: 'MINE',\n    value: true\n  }];\n\n  const onOwnRafflesSwitchChange = newValue => {\n    setShowOwnRafflesOnly(newValue);\n  };\n\n  if (device === DeviceType.Phone) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.filterBar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.leftPhoneSection,\n      children: connected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ownRafflesSwitchContainer,\n        children: /*#__PURE__*/_jsxDEV(SwitchSelector, {\n          onChange: onOwnRafflesSwitchChange,\n          options: options,\n          optionBorderRadius: 0,\n          wrapperBorderRadius: 0,\n          fontSize: 12,\n          initialSelectedIndex: 0,\n          selectionIndicatorMargin: 0,\n          selectedBackgroundColor: theme.palette.primary.main,\n          backgroundColor: 'transparent',\n          fontColor: 'white'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.rightPhoneSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.showEndedRaffles,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          className: classes.showEndedRafflesCheckbox,\n          value: hideEndedRaffles,\n          checked: hideEndedRaffles,\n          onClick: () => setHideEndedRaffles(currentValue => !currentValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          disableRipple: true,\n          className: classes.hideEndedText,\n          onClick: () => setHideEndedRaffles(currentValue => !currentValue),\n          children: \"Hide ended raffles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.filterBar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.leftSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.middleSection,\n      children: connected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ownRafflesSwitchContainer,\n        children: /*#__PURE__*/_jsxDEV(SwitchSelector, {\n          onChange: onOwnRafflesSwitchChange,\n          options: options,\n          optionBorderRadius: 0,\n          wrapperBorderRadius: 0,\n          fontSize: 12,\n          initialSelectedIndex: 0,\n          selectionIndicatorMargin: 0,\n          selectedBackgroundColor: theme.palette.primary.main,\n          backgroundColor: 'transparent',\n          fontColor: 'white'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.rightSection,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.showEndedRaffles,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          className: classes.showEndedRafflesCheckbox,\n          value: hideEndedRaffles,\n          checked: hideEndedRaffles,\n          onClick: () => setHideEndedRaffles(currentValue => !currentValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          disableRipple: true,\n          className: classes.hideEndedText,\n          onClick: () => setHideEndedRaffles(currentValue => !currentValue),\n          children: \"Hide ended raffles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterBar, \"KJ/yTvpp0TFbRCxJogLtxYiO408=\", false, function () {\n  return [useViewport, useStyles, useTheme, useWallet];\n});\n\n_c = FilterBar;\nexport default FilterBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterBar\");","map":{"version":3,"sources":["C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT/app/src/pages/ExploreRafflesScreen/components/FilterBar/index.tsx"],"names":["Button","Checkbox","SwitchSelector","useTheme","useWallet","useStyles","useViewport","DeviceType","FilterBar","hideEndedRaffles","setHideEndedRaffles","setShowOwnRafflesOnly","device","classes","theme","connected","options","label","value","onOwnRafflesSwitchChange","newValue","Phone","filterBar","leftPhoneSection","ownRafflesSwitchContainer","palette","primary","main","rightPhoneSection","showEndedRaffles","showEndedRafflesCheckbox","currentValue","hideEndedText","leftSection","middleSection","rightSection"],"mappings":"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","sourcesContent":["import { FC } from 'react';\r\nimport { Button, Checkbox } from '@material-ui/core';\r\nimport SwitchSelector from 'react-switch-selector';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\n\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../../../hooks/useViewport';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\n\r\ninterface FilterBarProps {\r\n  hideEndedRaffles: boolean;\r\n  setHideEndedRaffles: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setShowOwnRafflesOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst FilterBar: FC<FilterBarProps> = ({\r\n  hideEndedRaffles,\r\n  setHideEndedRaffles,\r\n  setShowOwnRafflesOnly,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  const theme = useTheme();\r\n  const { connected } = useWallet();\r\n\r\n  const options = [\r\n    {\r\n      label: 'ALL',\r\n      value: false,\r\n    },\r\n    {\r\n      label: 'MINE',\r\n      value: true,\r\n    },\r\n  ];\r\n\r\n  const onOwnRafflesSwitchChange = (newValue: any) => {\r\n    setShowOwnRafflesOnly(newValue);\r\n  };\r\n\r\n  if (device === DeviceType.Phone)\r\n    return (\r\n      <div className={classes.filterBar}>\r\n        <div className={classes.leftPhoneSection}>\r\n          {connected && (\r\n            <div className={classes.ownRafflesSwitchContainer}>\r\n              <SwitchSelector\r\n                onChange={onOwnRafflesSwitchChange}\r\n                options={options}\r\n                optionBorderRadius={0}\r\n                wrapperBorderRadius={0}\r\n                fontSize={12}\r\n                initialSelectedIndex={0}\r\n                selectionIndicatorMargin={0}\r\n                selectedBackgroundColor={theme.palette.primary.main}\r\n                backgroundColor={'transparent'}\r\n                fontColor={'white'}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={classes.rightPhoneSection}>\r\n          <div className={classes.showEndedRaffles}>\r\n            <Checkbox\r\n              className={classes.showEndedRafflesCheckbox}\r\n              value={hideEndedRaffles}\r\n              checked={hideEndedRaffles}\r\n              onClick={() =>\r\n                setHideEndedRaffles((currentValue) => !currentValue)\r\n              }\r\n            />\r\n            <Button\r\n              variant=\"text\"\r\n              disableRipple\r\n              className={classes.hideEndedText}\r\n              onClick={() =>\r\n                setHideEndedRaffles((currentValue) => !currentValue)\r\n              }\r\n            >\r\n              Hide ended raffles\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className={classes.filterBar}>\r\n      <div className={classes.leftSection}></div>\r\n      <div className={classes.middleSection}>\r\n        {connected && (\r\n          <div className={classes.ownRafflesSwitchContainer}>\r\n            <SwitchSelector\r\n              onChange={onOwnRafflesSwitchChange}\r\n              options={options}\r\n              optionBorderRadius={0}\r\n              wrapperBorderRadius={0}\r\n              fontSize={12}\r\n              initialSelectedIndex={0}\r\n              selectionIndicatorMargin={0}\r\n              selectedBackgroundColor={theme.palette.primary.main}\r\n              backgroundColor={'transparent'}\r\n              fontColor={'white'}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={classes.rightSection}>\r\n        <div className={classes.showEndedRaffles}>\r\n          <Checkbox\r\n            className={classes.showEndedRafflesCheckbox}\r\n            value={hideEndedRaffles}\r\n            checked={hideEndedRaffles}\r\n            onClick={() => setHideEndedRaffles((currentValue) => !currentValue)}\r\n          />\r\n          <Button\r\n            variant=\"text\"\r\n            disableRipple\r\n            className={classes.hideEndedText}\r\n            onClick={() => setHideEndedRaffles((currentValue) => !currentValue)}\r\n          >\r\n            Hide ended raffles\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n"]},"metadata":{},"sourceType":"module"}