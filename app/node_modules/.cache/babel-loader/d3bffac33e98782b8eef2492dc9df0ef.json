{"ast":null,"code":"import _toConsumableArray from \"C:/Riff-Raffle-Solana-NFT build 1-1/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Riff-Raffle-Solana-NFT build 1-1/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:/Riff-Raffle-Solana-NFT build 1-1/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Riff-Raffle-Solana-NFT build 1-1/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Transaction } from \"@solana/web3.js\";\nimport { splitArgsAndCtx } from \"../context\";\n\nvar TransactionFactory = /*#__PURE__*/function () {\n  function TransactionFactory() {\n    _classCallCheck(this, TransactionFactory);\n  }\n\n  _createClass(TransactionFactory, null, [{\n    key: \"build\",\n    value: function build(idlIx, ixFn) {\n      var txFn = function txFn() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var _splitArgsAndCtx = splitArgsAndCtx(idlIx, [].concat(args)),\n            _splitArgsAndCtx2 = _slicedToArray(_splitArgsAndCtx, 2),\n            ctx = _splitArgsAndCtx2[1];\n\n        var tx = new Transaction();\n\n        if (ctx.instructions !== undefined) {\n          tx.add.apply(tx, _toConsumableArray(ctx.instructions));\n        }\n\n        tx.add(ixFn.apply(void 0, args));\n        return tx;\n      };\n\n      return txFn;\n    }\n  }]);\n\n  return TransactionFactory;\n}();\n\nexport { TransactionFactory as default };","map":null,"metadata":{},"sourceType":"module"}