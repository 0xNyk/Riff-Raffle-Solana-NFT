{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _asyncToGenerator = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n  }\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sleep = exports.parseTokenAccount = exports.getTokenAccount = exports.parseMintAccount = exports.getMintInfo = exports.createAccountRentExempt = exports.createTokenAccountInstrs = exports.createTokenAccount = exports.createMintAndVault = exports.createMintInstructions = exports.createMint = exports.SPL_SHARED_MEMORY_ID = exports.connection = exports.simulateTransaction = exports.token = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar spl_token_1 = require(\"@solana/spl-token\");\n\nvar serum_1 = require(\"@project-serum/serum\");\n\n__exportStar(require(\"./provider\"), exports);\n\nexports.token = __importStar(require(\"./token\"));\n\nvar simulate_transaction_1 = require(\"./simulate-transaction\");\n\nObject.defineProperty(exports, \"simulateTransaction\", {\n  enumerable: true,\n  get: function get() {\n    return simulate_transaction_1.simulateTransaction;\n  }\n});\nexports.connection = __importStar(require(\"./connection\"));\nexports.SPL_SHARED_MEMORY_ID = new web3_js_1.PublicKey('shmem4EWT2sPdVGvTZCzXXRAURL9G5vpPxNwSeKhHUL');\n\nfunction createMint(_x, _x2, _x3) {\n  return _createMint.apply(this, arguments);\n}\n\nfunction _createMint() {\n  _createMint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider, authority, decimals) {\n    var mint, instructions, tx;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (authority === undefined) {\n              authority = provider.wallet.publicKey;\n            }\n\n            mint = new web3_js_1.Account();\n            _context.next = 4;\n            return createMintInstructions(provider, authority, mint.publicKey, decimals);\n\n          case 4:\n            instructions = _context.sent;\n            tx = new web3_js_1.Transaction();\n            tx.add.apply(tx, _toConsumableArray(instructions));\n            _context.next = 9;\n            return provider.send(tx, [mint]);\n\n          case 9:\n            return _context.abrupt(\"return\", mint.publicKey);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createMint.apply(this, arguments);\n}\n\nexports.createMint = createMint;\n\nfunction createMintInstructions(_x4, _x5, _x6, _x7) {\n  return _createMintInstructions.apply(this, arguments);\n}\n\nfunction _createMintInstructions() {\n  _createMintInstructions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(provider, authority, mint, decimals) {\n    var instructions;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = web3_js_1.SystemProgram;\n            _context2.t1 = provider.wallet.publicKey;\n            _context2.t2 = mint;\n            _context2.next = 5;\n            return provider.connection.getMinimumBalanceForRentExemption(82);\n\n          case 5:\n            _context2.t3 = _context2.sent;\n            _context2.t4 = serum_1.TokenInstructions.TOKEN_PROGRAM_ID;\n            _context2.t5 = {\n              fromPubkey: _context2.t1,\n              newAccountPubkey: _context2.t2,\n              space: 82,\n              lamports: _context2.t3,\n              programId: _context2.t4\n            };\n            _context2.t6 = _context2.t0.createAccount.call(_context2.t0, _context2.t5);\n            _context2.t7 = serum_1.TokenInstructions.initializeMint({\n              mint: mint,\n              decimals: decimals !== null && decimals !== void 0 ? decimals : 0,\n              mintAuthority: authority\n            });\n            instructions = [_context2.t6, _context2.t7];\n            return _context2.abrupt(\"return\", instructions);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createMintInstructions.apply(this, arguments);\n}\n\nexports.createMintInstructions = createMintInstructions;\n\nfunction createMintAndVault(_x8, _x9, _x10, _x11) {\n  return _createMintAndVault.apply(this, arguments);\n}\n\nfunction _createMintAndVault() {\n  _createMintAndVault = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(provider, amount, owner, decimals) {\n    var mint, vault, tx;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (owner === undefined) {\n              owner = provider.wallet.publicKey;\n            }\n\n            mint = new web3_js_1.Account();\n            vault = new web3_js_1.Account();\n            tx = new web3_js_1.Transaction();\n            _context3.t0 = tx;\n            _context3.t1 = web3_js_1.SystemProgram;\n            _context3.t2 = provider.wallet.publicKey;\n            _context3.t3 = mint.publicKey;\n            _context3.next = 10;\n            return provider.connection.getMinimumBalanceForRentExemption(82);\n\n          case 10:\n            _context3.t4 = _context3.sent;\n            _context3.t5 = serum_1.TokenInstructions.TOKEN_PROGRAM_ID;\n            _context3.t6 = {\n              fromPubkey: _context3.t2,\n              newAccountPubkey: _context3.t3,\n              space: 82,\n              lamports: _context3.t4,\n              programId: _context3.t5\n            };\n            _context3.t7 = _context3.t1.createAccount.call(_context3.t1, _context3.t6);\n            _context3.t8 = serum_1.TokenInstructions.initializeMint({\n              mint: mint.publicKey,\n              decimals: decimals !== null && decimals !== void 0 ? decimals : 0,\n              mintAuthority: provider.wallet.publicKey\n            });\n            _context3.t9 = web3_js_1.SystemProgram;\n            _context3.t10 = provider.wallet.publicKey;\n            _context3.t11 = vault.publicKey;\n            _context3.next = 20;\n            return provider.connection.getMinimumBalanceForRentExemption(165);\n\n          case 20:\n            _context3.t12 = _context3.sent;\n            _context3.t13 = serum_1.TokenInstructions.TOKEN_PROGRAM_ID;\n            _context3.t14 = {\n              fromPubkey: _context3.t10,\n              newAccountPubkey: _context3.t11,\n              space: 165,\n              lamports: _context3.t12,\n              programId: _context3.t13\n            };\n            _context3.t15 = _context3.t9.createAccount.call(_context3.t9, _context3.t14);\n            _context3.t16 = serum_1.TokenInstructions.initializeAccount({\n              account: vault.publicKey,\n              mint: mint.publicKey,\n              owner: owner\n            });\n            _context3.t17 = serum_1.TokenInstructions.mintTo({\n              mint: mint.publicKey,\n              destination: vault.publicKey,\n              amount: amount,\n              mintAuthority: provider.wallet.publicKey\n            });\n\n            _context3.t0.add.call(_context3.t0, _context3.t7, _context3.t8, _context3.t15, _context3.t16, _context3.t17);\n\n            _context3.next = 29;\n            return provider.send(tx, [mint, vault]);\n\n          case 29:\n            return _context3.abrupt(\"return\", [mint.publicKey, vault.publicKey]);\n\n          case 30:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _createMintAndVault.apply(this, arguments);\n}\n\nexports.createMintAndVault = createMintAndVault;\n\nfunction createTokenAccount(_x12, _x13, _x14) {\n  return _createTokenAccount.apply(this, arguments);\n}\n\nfunction _createTokenAccount() {\n  _createTokenAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(provider, mint, owner) {\n    var vault, tx;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            vault = new web3_js_1.Account();\n            tx = new web3_js_1.Transaction();\n            _context4.t0 = tx.add;\n            _context4.t1 = tx;\n            _context4.t2 = _toConsumableArray;\n            _context4.next = 7;\n            return createTokenAccountInstrs(provider, vault.publicKey, mint, owner);\n\n          case 7:\n            _context4.t3 = _context4.sent;\n            _context4.t4 = (0, _context4.t2)(_context4.t3);\n\n            _context4.t0.apply.call(_context4.t0, _context4.t1, _context4.t4);\n\n            _context4.next = 12;\n            return provider.send(tx, [vault]);\n\n          case 12:\n            return _context4.abrupt(\"return\", vault.publicKey);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _createTokenAccount.apply(this, arguments);\n}\n\nexports.createTokenAccount = createTokenAccount;\n\nfunction createTokenAccountInstrs(_x15, _x16, _x17, _x18, _x19) {\n  return _createTokenAccountInstrs.apply(this, arguments);\n}\n\nfunction _createTokenAccountInstrs() {\n  _createTokenAccountInstrs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(provider, newAccountPubkey, mint, owner, lamports) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(lamports === undefined)) {\n              _context5.next = 4;\n              break;\n            }\n\n            _context5.next = 3;\n            return provider.connection.getMinimumBalanceForRentExemption(165);\n\n          case 3:\n            lamports = _context5.sent;\n\n          case 4:\n            return _context5.abrupt(\"return\", [web3_js_1.SystemProgram.createAccount({\n              fromPubkey: provider.wallet.publicKey,\n              newAccountPubkey: newAccountPubkey,\n              space: 165,\n              lamports: lamports,\n              programId: serum_1.TokenInstructions.TOKEN_PROGRAM_ID\n            }), serum_1.TokenInstructions.initializeAccount({\n              account: newAccountPubkey,\n              mint: mint,\n              owner: owner\n            })]);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _createTokenAccountInstrs.apply(this, arguments);\n}\n\nexports.createTokenAccountInstrs = createTokenAccountInstrs;\n\nfunction createAccountRentExempt(_x20, _x21, _x22) {\n  return _createAccountRentExempt.apply(this, arguments);\n}\n\nfunction _createAccountRentExempt() {\n  _createAccountRentExempt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(provider, programId, size) {\n    var acc, tx;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            acc = new web3_js_1.Account();\n            tx = new web3_js_1.Transaction();\n            _context6.t0 = tx;\n            _context6.t1 = web3_js_1.SystemProgram;\n            _context6.t2 = provider.wallet.publicKey;\n            _context6.t3 = acc.publicKey;\n            _context6.t4 = size;\n            _context6.next = 9;\n            return provider.connection.getMinimumBalanceForRentExemption(size);\n\n          case 9:\n            _context6.t5 = _context6.sent;\n            _context6.t6 = programId;\n            _context6.t7 = {\n              fromPubkey: _context6.t2,\n              newAccountPubkey: _context6.t3,\n              space: _context6.t4,\n              lamports: _context6.t5,\n              programId: _context6.t6\n            };\n            _context6.t8 = _context6.t1.createAccount.call(_context6.t1, _context6.t7);\n\n            _context6.t0.add.call(_context6.t0, _context6.t8);\n\n            _context6.next = 16;\n            return provider.send(tx, [acc]);\n\n          case 16:\n            return _context6.abrupt(\"return\", acc);\n\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _createAccountRentExempt.apply(this, arguments);\n}\n\nexports.createAccountRentExempt = createAccountRentExempt;\n\nfunction getMintInfo(_x23, _x24) {\n  return _getMintInfo.apply(this, arguments);\n}\n\nfunction _getMintInfo() {\n  _getMintInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(provider, addr) {\n    var depositorAccInfo;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return provider.connection.getAccountInfo(addr);\n\n          case 2:\n            depositorAccInfo = _context7.sent;\n\n            if (!(depositorAccInfo === null)) {\n              _context7.next = 5;\n              break;\n            }\n\n            throw new Error('Failed to find token account');\n\n          case 5:\n            return _context7.abrupt(\"return\", parseMintAccount(depositorAccInfo.data));\n\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getMintInfo.apply(this, arguments);\n}\n\nexports.getMintInfo = getMintInfo;\n\nfunction parseMintAccount(data) {\n  var m = spl_token_1.MintLayout.decode(data);\n  m.mintAuthority = new web3_js_1.PublicKey(m.mintAuthority);\n  m.supply = spl_token_1.u64.fromBuffer(m.supply);\n  m.isInitialized = m.state !== 0;\n  return m;\n}\n\nexports.parseMintAccount = parseMintAccount;\n\nfunction getTokenAccount(_x25, _x26) {\n  return _getTokenAccount.apply(this, arguments);\n}\n\nfunction _getTokenAccount() {\n  _getTokenAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(provider, addr) {\n    var depositorAccInfo;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return provider.connection.getAccountInfo(addr);\n\n          case 2:\n            depositorAccInfo = _context8.sent;\n\n            if (!(depositorAccInfo === null)) {\n              _context8.next = 5;\n              break;\n            }\n\n            throw new Error('Failed to find token account');\n\n          case 5:\n            return _context8.abrupt(\"return\", parseTokenAccount(depositorAccInfo.data));\n\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _getTokenAccount.apply(this, arguments);\n}\n\nexports.getTokenAccount = getTokenAccount;\n\nfunction parseTokenAccount(data) {\n  var accountInfo = spl_token_1.AccountLayout.decode(data);\n  accountInfo.mint = new web3_js_1.PublicKey(accountInfo.mint);\n  accountInfo.owner = new web3_js_1.PublicKey(accountInfo.owner);\n  accountInfo.amount = spl_token_1.u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null; // eslint-disable-next-line new-cap\n\n    accountInfo.delegatedAmount = new spl_token_1.u64(0);\n  } else {\n    accountInfo.delegate = new web3_js_1.PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = spl_token_1.u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = spl_token_1.u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new web3_js_1.PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n}\n\nexports.parseTokenAccount = parseTokenAccount;\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\n\nexports.sleep = sleep;","map":null,"metadata":{},"sourceType":"script"}