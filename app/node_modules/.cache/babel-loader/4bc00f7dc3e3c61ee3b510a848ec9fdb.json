{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kroni\\\\Desktop\\\\RIFF RAFFLE SITE PNSC\\\\Riff-Raffle-Solana-NFT final\\\\app\\\\src\\\\components\\\\AirdropButton\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { LocalAirport } from \"@material-ui/icons\";\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { airdrop } from \"../../lib/utils/airdrop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AirdropButton = () => {\n  _s();\n\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey\n  } = useWallet();\n  const [loading, setLoading] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Aidrop for testing\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: async () => {\n        if (!publicKey) return;\n        setLoading(true);\n        await airdrop(connection, publicKey);\n        setLoading(false);\n        toast.success('Aidropped some SOL and some DT');\n      },\n      disabled: loading,\n      children: /*#__PURE__*/_jsxDEV(LocalAirport, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AirdropButton, \"i2lWoONd8F/8vqrd1Rnhp0slSXo=\", false, function () {\n  return [useConnection, useWallet];\n});\n\n_c = AirdropButton;\nexport default AirdropButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AirdropButton\");","map":{"version":3,"sources":["C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/src/components/AirdropButton/index.tsx"],"names":["IconButton","Tooltip","LocalAirport","useConnection","useWallet","useState","toast","airdrop","AirdropButton","connection","publicKey","loading","setLoading","success"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,mBAApC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,8BAAzC;AACA,SAAaC,QAAb,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;AAGA,MAAMC,aAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,aAAa,EAApC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAgBN,SAAS,EAA/B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEA,sBAAO,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,oBAAf;AAAA,2BACH,QAAC,UAAD;AACE,MAAA,OAAO,EAAE,YAAY;AACnB,YAAI,CAACK,SAAL,EAAgB;AAChBE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAML,OAAO,CAACE,UAAD,EAAaC,SAAb,CAAb;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,QAAAA,KAAK,CAACO,OAAN,CAAc,gCAAd;AACD,OAPH;AAQE,MAAA,QAAQ,EAAEF,OARZ;AAAA,6BAUE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAcD,CAnBD;;GAAMH,a;UACmBL,a,EACDC,S;;;KAFlBI,a;AAqBN,eAAeA,aAAf","sourcesContent":["import { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport { LocalAirport } from \"@material-ui/icons\";\r\nimport { useConnection, useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { FC, useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { airdrop } from \"../../lib/utils/airdrop\";\r\n\r\n\r\nconst AirdropButton: FC = () => {\r\n  const { connection } = useConnection();\r\n  const { publicKey } = useWallet();\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  return <Tooltip title=\"Aidrop for testing\">\r\n      <IconButton\r\n        onClick={async () => {\r\n          if (!publicKey) return;\r\n          setLoading(true);\r\n          await airdrop(connection, publicKey);\r\n          setLoading(false);\r\n          toast.success('Aidropped some SOL and some DT');\r\n        }}\r\n        disabled={loading}\r\n      >\r\n        <LocalAirport />\r\n      </IconButton>\r\n    </Tooltip>;\r\n};\r\n\r\nexport default AirdropButton;"]},"metadata":{},"sourceType":"module"}