{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kroni\\\\Desktop\\\\RIFF RAFFLE SITE PNSC\\\\Riff-Raffle-Solana-NFT final\\\\app\\\\src\\\\components\\\\ScrollToTop\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { IconButton, Slide } from '@material-ui/core';\nimport { ChevronRight } from '@material-ui/icons';\nimport { useStyles } from './styles';\nimport { useViewport } from '../../hooks/useViewport';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollToTop = () => {\n  _s();\n\n  const {\n    device\n  } = useViewport();\n  const classes = useStyles({\n    device\n  });\n  const [isVisible, setIsVisible] = useState(false);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  useEffect(() => {\n    const toggleVisibility = () => {\n      if (window.pageYOffset > 100) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', toggleVisibility);\n    return () => window.removeEventListener('scroll', toggleVisibility);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"up\",\n      in: isVisible,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        size: 'medium',\n        className: classes.scrollButton,\n        onClick: scrollToTop,\n        children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n          className: classes.scrollButtonIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScrollToTop, \"J+AmUdtTqpiZxLoqNeeBSasxM3U=\", false, function () {\n  return [useViewport, useStyles];\n});\n\n_c = ScrollToTop;\nexport default ScrollToTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollToTop\");","map":{"version":3,"sources":["C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/src/components/ScrollToTop/index.tsx"],"names":["React","useEffect","useState","IconButton","Slide","ChevronRight","useStyles","useViewport","ScrollToTop","device","classes","isVisible","setIsVisible","scrollToTop","window","scrollTo","top","behavior","toggleVisibility","pageYOffset","addEventListener","removeEventListener","root","scrollButton","scrollButtonIcon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,MAAMC,WAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAaF,WAAW,EAA9B;AACA,QAAMG,OAAO,GAAGJ,SAAS,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAzB;AAEA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,MAAAA,GAAG,EAAE,CADS;AAEdC,MAAAA,QAAQ,EAAE;AAFI,KAAhB;AAID,GALD;;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,gBAAgB,GAAG,MAAM;AAC7B,UAAIJ,MAAM,CAACK,WAAP,GAAqB,GAAzB,EAA8B;AAC5BP,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAND;;AAQAE,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCF,gBAAlC;AAEA,WAAO,MAAMJ,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCH,gBAArC,CAAb;AACD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACY,IAAxB;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,IAAjB;AAAsB,MAAA,EAAE,EAAEX,SAA1B;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAE,QADR;AAEE,QAAA,SAAS,EAAED,OAAO,CAACa,YAFrB;AAGE,QAAA,OAAO,EAAEV,WAHX;AAAA,+BAKE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEH,OAAO,CAACc;AAAjC;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxCD;;GAAMhB,W;UACeD,W,EACHD,S;;;KAFZE,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\r\nimport { IconButton, Slide } from '@material-ui/core';\r\nimport { ChevronRight } from '@material-ui/icons';\r\n\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../hooks/useViewport';\r\n\r\nconst ScrollToTop: FC = () => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = () => {\r\n      if (window.pageYOffset > 100) {\r\n        setIsVisible(true);\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', toggleVisibility);\r\n\r\n    return () => window.removeEventListener('scroll', toggleVisibility);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slide direction=\"up\" in={isVisible}>\r\n        <IconButton\r\n          size={'medium'}\r\n          className={classes.scrollButton}\r\n          onClick={scrollToTop}\r\n        >\r\n          <ChevronRight className={classes.scrollButtonIcon} />\r\n        </IconButton>\r\n      </Slide>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n"]},"metadata":{},"sourceType":"module"}