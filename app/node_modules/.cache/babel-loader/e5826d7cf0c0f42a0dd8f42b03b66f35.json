{"ast":null,"code":"var _jsxFileName = \"C:\\\\Riff-Raffle-Solana-NFT build 1-1\\\\app\\\\src\\\\pages\\\\RaffleEndedScreen\\\\components\\\\EndedRaffleActionsSection\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport { WalletMultiButton } from '@solana/wallet-adapter-material-ui';\nimport confetti from 'canvas-confetti';\nimport useCommonStyles from '../../../../assets/styles';\nimport { useStyles } from './styles';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EndedRaffleActionSection = ({\n  raffle,\n  userPubkey,\n  entrant,\n  entrantWinningTickets,\n  scrollRef\n}) => {\n  _s();\n\n  const classes = { ...useCommonStyles(),\n    ...useStyles()\n  };\n  const noPrizes = useMemo(() => raffle.prizes.length === 0, [raffle]);\n  const winnersRevealed = useMemo(() => !!raffle.randomness, [raffle]);\n  const userIsConnected = useMemo(() => !!userPubkey, [userPubkey]);\n  const userHasParticipated = useMemo(() => ((entrant === null || entrant === void 0 ? void 0 : entrant.tickets.length) || 0) > 0, [entrant]);\n  useEffect(() => {\n    if (entrantWinningTickets.length === 0) return;\n    const confettiTimerId = makeConfetti();\n    return () => clearInterval(confettiTimerId);\n  }, [entrantWinningTickets.length]);\n  if (noPrizes) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"No prizes to reveal!\"\n  }, void 0, false);\n  if (!winnersRevealed) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      className: classes.textHighlight,\n      children: \"Winners will be announced soon.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Hang tight!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n  if (!userIsConnected) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      className: classes.textHighlight,\n      children: \"Winners have been announced.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Connect your wallet to check if you have won any prizes!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WalletMultiButton, {\n      className: `${classes.mainButton} ${classes.connectToBuyButton}`,\n      children: \"Connect to reveal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n  if (!userHasParticipated) return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body1\",\n    children: \"Uh oh! It looks like you did not participate in this raffle!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n  if (entrantWinningTickets.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      className: classes.textHighlight,\n      children: \"Oh no! No prize.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Better luck next time!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      className: classes.textHighlight,\n      children: \"Hurray, you won!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: classes.scrollLink,\n          variant: \"text\",\n          onClick: () => {\n            var _scrollRef$current;\n\n            return (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start'\n            });\n          },\n          children: \"Scroll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), \"to see your prize(s)!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EndedRaffleActionSection, \"d1B7rDzjMepyN4zQbCpwVUgR/68=\", false, function () {\n  return [useCommonStyles, useStyles];\n});\n\n_c = EndedRaffleActionSection;\n\nconst makeConfetti = () => {\n  const duration = 5 * 1000;\n  const animationEnd = Date.now() + duration;\n  const defaults = {\n    startVelocity: 30,\n    spread: 360,\n    ticks: 60,\n    zIndex: 0\n  };\n\n  function randomInRange(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  let intervalId;\n  intervalId = setInterval(() => {\n    const timeLeft = animationEnd - Date.now();\n\n    if (timeLeft <= 0) {\n      return clearInterval(intervalId);\n    }\n\n    var particleCount = 50 * (timeLeft / duration); // since particles fall down, start a bit higher than random\n\n    confetti(Object.assign({}, defaults, {\n      particleCount,\n      origin: {\n        x: randomInRange(0.1, 0.3),\n        y: Math.random() - 0.2\n      }\n    }));\n    confetti(Object.assign({}, defaults, {\n      particleCount,\n      origin: {\n        x: randomInRange(0.7, 0.9),\n        y: Math.random() - 0.2\n      }\n    }));\n  }, 250);\n  return intervalId;\n};\n\nexport default EndedRaffleActionSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"EndedRaffleActionSection\");","map":{"version":3,"sources":["C:/Riff-Raffle-Solana-NFT build 1-1/app/src/pages/RaffleEndedScreen/components/EndedRaffleActionsSection/index.tsx"],"names":["useEffect","useMemo","Button","Typography","WalletMultiButton","confetti","useCommonStyles","useStyles","EndedRaffleActionSection","raffle","userPubkey","entrant","entrantWinningTickets","scrollRef","classes","noPrizes","prizes","length","winnersRevealed","randomness","userIsConnected","userHasParticipated","tickets","confettiTimerId","makeConfetti","clearInterval","textHighlight","mainButton","connectToBuyButton","scrollLink","current","scrollIntoView","behavior","block","duration","animationEnd","Date","now","defaults","startVelocity","spread","ticks","zIndex","randomInRange","min","max","Math","random","intervalId","setInterval","timeLeft","particleCount","Object","assign","origin","x","y"],"mappings":"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","sourcesContent":["import { FC, RefObject, useEffect, useMemo } from 'react';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-material-ui';\r\nimport confetti from 'canvas-confetti';\r\n\r\nimport { Entrant, Raffle } from '../../../../lib/types';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { useStyles } from './styles';\r\n\r\ninterface EndedRaffleActionsSectionProps {\r\n  raffle: Raffle;\r\n  userPubkey: PublicKey | undefined;\r\n  entrant: Entrant | undefined;\r\n  entrantWinningTickets: { prizeIndex: number; ticketIndex: number }[];\r\n  scrollRef: RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst EndedRaffleActionSection: FC<EndedRaffleActionsSectionProps> = ({\r\n  raffle,\r\n  userPubkey,\r\n  entrant,\r\n  entrantWinningTickets,\r\n  scrollRef,\r\n}) => {\r\n  const classes = { ...useCommonStyles(), ...useStyles() };\r\n\r\n  const noPrizes = useMemo(() => raffle.prizes.length === 0, [raffle]);\r\n  const winnersRevealed = useMemo(() => !!raffle.randomness, [raffle]);\r\n  const userIsConnected = useMemo(() => !!userPubkey, [userPubkey]);\r\n  const userHasParticipated = useMemo(\r\n    () => (entrant?.tickets.length || 0) > 0,\r\n    [entrant]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (entrantWinningTickets.length === 0) return;\r\n    const confettiTimerId = makeConfetti();\r\n    return () => clearInterval(confettiTimerId);\r\n  }, [entrantWinningTickets.length]);\r\n\r\n  if (noPrizes) return <>No prizes to reveal!</>;\r\n\r\n  if (!winnersRevealed)\r\n    return (\r\n      <>\r\n        <Typography variant=\"body1\" className={classes.textHighlight}>\r\n          Winners will be announced soon.\r\n        </Typography>\r\n        <Typography variant=\"body1\">Hang tight!</Typography>\r\n      </>\r\n    );\r\n\r\n  if (!userIsConnected)\r\n    return (\r\n      <>\r\n        <Typography variant=\"h3\" className={classes.textHighlight}>\r\n          Winners have been announced.\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Connect your wallet to check if you have won any prizes!\r\n        </Typography>\r\n        <WalletMultiButton\r\n          className={`${classes.mainButton} ${classes.connectToBuyButton}`}\r\n        >\r\n          Connect to reveal\r\n        </WalletMultiButton>\r\n      </>\r\n    );\r\n\r\n  if (!userHasParticipated)\r\n    return (\r\n      <Typography variant=\"body1\">\r\n        Uh oh! It looks like you did not participate in this raffle!\r\n      </Typography>\r\n    );\r\n\r\n  if (entrantWinningTickets.length === 0)\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h3\" className={classes.textHighlight}>\r\n          Oh no! No prize.\r\n        </Typography>\r\n        <Typography variant=\"body1\">Better luck next time!</Typography>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h3\" className={classes.textHighlight}>\r\n        Hurray, you won!\r\n      </Typography>\r\n      <div>\r\n        <Typography>\r\n          <Button\r\n            className={classes.scrollLink}\r\n            variant=\"text\"\r\n            onClick={() =>\r\n              scrollRef.current?.scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'start',\r\n              })\r\n            }\r\n          >\r\n            Scroll\r\n          </Button>\r\n          to see your prize(s)!\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst makeConfetti = () => {\r\n  const duration = 5 * 1000;\r\n  const animationEnd = Date.now() + duration;\r\n  const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };\r\n\r\n  function randomInRange(min: number, max: number) {\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n\r\n  let intervalId: ReturnType<typeof setInterval>;\r\n  intervalId = setInterval(() => {\r\n    const timeLeft = animationEnd - Date.now();\r\n\r\n    if (timeLeft <= 0) {\r\n      return clearInterval(intervalId);\r\n    }\r\n\r\n    var particleCount = 50 * (timeLeft / duration);\r\n    // since particles fall down, start a bit higher than random\r\n    confetti(\r\n      Object.assign({}, defaults, {\r\n        particleCount,\r\n        origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 },\r\n      })\r\n    );\r\n    confetti(\r\n      Object.assign({}, defaults, {\r\n        particleCount,\r\n        origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 },\r\n      })\r\n    );\r\n  }, 250);\r\n\r\n  return intervalId;\r\n};\r\n\r\nexport default EndedRaffleActionSection;\r\n"]},"metadata":{},"sourceType":"module"}