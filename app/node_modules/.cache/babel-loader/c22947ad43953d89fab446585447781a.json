{"ast":null,"code":"import _slicedToArray from \"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Button, Collapse, Dialog, DialogContent, DialogTitle, IconButton, List, ListItem, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useWalletDialog } from './useWalletDialog';\nimport { WalletListItem } from './WalletListItem';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& .MuiDialog-paper': {\n        width: theme.spacing(40),\n        margin: 0\n      },\n      '& .MuiDialogTitle-root': {\n        backgroundColor: theme.palette.primary.main,\n        '& .MuiTypography-root': {\n          display: 'flex',\n          justifyContent: 'space-between',\n          lineHeight: theme.spacing(5) + 'px'\n        },\n        '& .MuiIconButton-root': {\n          flexShrink: 1,\n          padding: theme.spacing(),\n          marginRight: theme.spacing(-1),\n          color: theme.palette.grey[500]\n        }\n      },\n      '& .MuiDialogContent-root': {\n        padding: 0,\n        '& .MuiCollapse-root': {\n          '& .MuiList-root': {\n            background: theme.palette.grey[900]\n          }\n        },\n        '& .MuiList-root': {\n          background: theme.palette.grey[900],\n          padding: 0\n        },\n        '& .MuiListItem-root': {\n          boxShadow: 'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)',\n          '&:hover': {\n            boxShadow: 'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)' + ', 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.05)'\n          },\n          padding: 0,\n          '& .MuiButton-endIcon': {\n            margin: 0\n          },\n          '& .MuiButton-root': {\n            flexGrow: 1,\n            justifyContent: 'space-between',\n            padding: theme.spacing(1, 3),\n            borderRadius: undefined,\n            fontSize: '1rem',\n            fontWeight: 400\n          },\n          '& .MuiSvgIcon-root': {\n            color: theme.palette.grey[500]\n          }\n        }\n      }\n    }\n  };\n});\nexport var WalletDialog = function WalletDialog(_a) {\n  var _a$title = _a.title,\n      title = _a$title === void 0 ? 'Select your wallet' : _a$title,\n      _a$featuredWallets = _a.featuredWallets,\n      featuredWallets = _a$featuredWallets === void 0 ? 3 : _a$featuredWallets,\n      onClose = _a.onClose,\n      props = __rest(_a, [\"title\", \"featuredWallets\", \"onClose\"]);\n\n  var styles = useStyles();\n\n  var _useWallet = useWallet(),\n      wallets = _useWallet.wallets,\n      select = _useWallet.select;\n\n  var _useWalletDialog = useWalletDialog(),\n      open = _useWalletDialog.open,\n      setOpen = _useWalletDialog.setOpen;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var _useMemo = useMemo(function () {\n    return [wallets.slice(0, featuredWallets), wallets.slice(featuredWallets)];\n  }, [wallets, featuredWallets]),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      featured = _useMemo2[0],\n      more = _useMemo2[1];\n\n  var handleClose = useCallback(function (event, reason) {\n    if (onClose) onClose(event, reason);\n    if (!event.defaultPrevented) setOpen(false);\n  }, [setOpen, onClose]);\n  var handleWalletClick = useCallback(function (event, walletName) {\n    select(walletName);\n    handleClose(event);\n  }, [select, handleClose]);\n  var handleExpandClick = useCallback(function () {\n    return setExpanded(!expanded);\n  }, [setExpanded, expanded]);\n  return React.createElement(Dialog, Object.assign({\n    open: open,\n    onClose: handleClose,\n    className: styles.root\n  }, props), React.createElement(DialogTitle, null, title, React.createElement(IconButton, {\n    onClick: handleClose\n  }, React.createElement(CloseIcon, null))), React.createElement(DialogContent, null, React.createElement(List, null, featured.map(function (wallet) {\n    return React.createElement(WalletListItem, {\n      key: wallet.name,\n      onClick: function onClick(event) {\n        return handleWalletClick(event, wallet.name);\n      },\n      wallet: wallet\n    });\n  }), more.length ? React.createElement(React.Fragment, null, React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, React.createElement(List, null, more.map(function (wallet) {\n    return React.createElement(WalletListItem, {\n      key: wallet.name,\n      onClick: function onClick(event) {\n        return handleWalletClick(event, wallet.name);\n      },\n      wallet: wallet\n    });\n  }))), React.createElement(ListItem, null, React.createElement(Button, {\n    onClick: handleExpandClick\n  }, expanded ? 'Less' : 'More', \" options\", expanded ? React.createElement(ExpandLess, null) : React.createElement(ExpandMore, null)))) : null)));\n};","map":null,"metadata":{},"sourceType":"module"}