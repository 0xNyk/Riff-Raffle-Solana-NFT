{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _regeneratorRuntime = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _toConsumableArray = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/kroni/Desktop/RIFF RAFFLE SITE PNSC/Riff-Raffle-Solana-NFT final/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = exports.ReferralFees = exports.OpenOrdersPda = void 0;\n\nvar anchor_1 = require(\"@project-serum/anchor\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar OpenOrdersPda = /*#__PURE__*/function () {\n  function OpenOrdersPda(_ref) {\n    var proxyProgramId = _ref.proxyProgramId,\n        dexProgramId = _ref.dexProgramId;\n\n    _classCallCheck(this, OpenOrdersPda);\n\n    this._proxyProgramId = proxyProgramId;\n    this._dexProgramId = dexProgramId;\n  } // PDA authorized to create open orders accounts.\n\n\n  _createClass(OpenOrdersPda, [{\n    key: \"initOpenOrders\",\n    value: function initOpenOrders(ix) {\n      var market = ix.keys[2].pubkey;\n      var owner = ix.keys[1].pubkey; // b\"open-orders\"\n\n      var openOrdersSeed = Buffer.from([111, 112, 101, 110, 45, 111, 114, 100, 101, 114, 115]); // b\"open-orders-init\"\n\n      var openOrdersInitSeed = Buffer.from([111, 112, 101, 110, 45, 111, 114, 100, 101, 114, 115, 45, 105, 110, 105, 116]);\n\n      var _anchor_1$utils$publi = anchor_1.utils.publicKey.findProgramAddressSync([openOrdersSeed, this._dexProgramId.toBuffer(), market.toBuffer(), owner.toBuffer()], this._proxyProgramId),\n          _anchor_1$utils$publi2 = _slicedToArray(_anchor_1$utils$publi, 2),\n          openOrders = _anchor_1$utils$publi2[0],\n          bump = _anchor_1$utils$publi2[1];\n\n      var _anchor_1$utils$publi3 = anchor_1.utils.publicKey.findProgramAddressSync([openOrdersInitSeed, this._dexProgramId.toBuffer(), market.toBuffer()], this._proxyProgramId),\n          _anchor_1$utils$publi4 = _slicedToArray(_anchor_1$utils$publi3, 2),\n          marketAuthority = _anchor_1$utils$publi4[0],\n          bumpInit = _anchor_1$utils$publi4[1]; // Override the open orders account and market authority.\n\n\n      ix.keys[0].pubkey = openOrders;\n      ix.keys[4].pubkey = marketAuthority; // Writable because it must pay for the PDA initialization.\n\n      ix.keys[1].isWritable = true; // Prepend to the account list extra accounts needed for PDA initialization.\n\n      ix.keys = [{\n        pubkey: this._dexProgramId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: web3_js_1.SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }].concat(_toConsumableArray(ix.keys)); // Prepend the ix discriminator, bump, and bumpInit to the instruction data,\n      // which saves the program compute by avoiding recalculating them in the\n      // program.\n\n      ix.data = Buffer.concat([Buffer.from([0, bump, bumpInit]), ix.data]);\n    }\n  }, {\n    key: \"newOrderV3\",\n    value: function newOrderV3(ix) {\n      ix.data = Buffer.concat([Buffer.from([1]), ix.data]);\n    }\n  }, {\n    key: \"cancelOrderV2\",\n    value: function cancelOrderV2(ix) {\n      ix.data = Buffer.concat([Buffer.from([2]), ix.data]);\n    }\n  }, {\n    key: \"cancelOrderByClientIdV2\",\n    value: function cancelOrderByClientIdV2(ix) {\n      ix.data = Buffer.concat([Buffer.from([3]), ix.data]);\n    }\n  }, {\n    key: \"settleFunds\",\n    value: function settleFunds(ix) {\n      ix.data = Buffer.concat([Buffer.from([4]), ix.data]);\n    }\n  }, {\n    key: \"closeOpenOrders\",\n    value: function closeOpenOrders(ix) {\n      ix.data = Buffer.concat([Buffer.from([5]), ix.data]);\n    }\n  }, {\n    key: \"prune\",\n    value: function prune(ix) {\n      ix.data = Buffer.concat([Buffer.from([6]), ix.data]);\n    }\n  }], [{\n    key: \"marketAuthority\",\n    value: function () {\n      var _marketAuthority = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(market, dexProgramId, proxyProgramId) {\n        var openOrdersStr, _yield$web3_js_1$Publ, _yield$web3_js_1$Publ2, addr;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // b\"open-orders-init\"\n                openOrdersStr = Buffer.from([111, 112, 101, 110, 45, 111, 114, 100, 101, 114, 115, 45, 105, 110, 105, 116]);\n                _context.next = 3;\n                return web3_js_1.PublicKey.findProgramAddress([openOrdersStr, dexProgramId.toBuffer(), market.toBuffer()], proxyProgramId);\n\n              case 3:\n                _yield$web3_js_1$Publ = _context.sent;\n                _yield$web3_js_1$Publ2 = _slicedToArray(_yield$web3_js_1$Publ, 1);\n                addr = _yield$web3_js_1$Publ2[0];\n                return _context.abrupt(\"return\", addr);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function marketAuthority(_x, _x2, _x3) {\n        return _marketAuthority.apply(this, arguments);\n      }\n\n      return marketAuthority;\n    }()\n  }, {\n    key: \"openOrdersAddress\",\n    value: function () {\n      var _openOrdersAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(market, owner, dexProgramId, proxyProgramId) {\n        var openOrdersStr, _yield$web3_js_1$Publ3, _yield$web3_js_1$Publ4, addr;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // b\"open-orders\".\n                openOrdersStr = Buffer.from([111, 112, 101, 110, 45, 111, 114, 100, 101, 114, 115]);\n                _context2.next = 3;\n                return web3_js_1.PublicKey.findProgramAddress([openOrdersStr, dexProgramId.toBuffer(), market.toBuffer(), owner.toBuffer()], proxyProgramId);\n\n              case 3:\n                _yield$web3_js_1$Publ3 = _context2.sent;\n                _yield$web3_js_1$Publ4 = _slicedToArray(_yield$web3_js_1$Publ3, 1);\n                addr = _yield$web3_js_1$Publ4[0];\n                return _context2.abrupt(\"return\", addr);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function openOrdersAddress(_x4, _x5, _x6, _x7) {\n        return _openOrdersAddress.apply(this, arguments);\n      }\n\n      return openOrdersAddress;\n    }()\n  }]);\n\n  return OpenOrdersPda;\n}();\n\nexports.OpenOrdersPda = OpenOrdersPda;\n\nvar ReferralFees = /*#__PURE__*/function () {\n  function ReferralFees() {\n    _classCallCheck(this, ReferralFees);\n  }\n\n  _createClass(ReferralFees, [{\n    key: \"initOpenOrders\",\n    value: // eslint-disable-next-line\n    function initOpenOrders(_ix) {} // eslint-disable-next-line\n\n  }, {\n    key: \"newOrderV3\",\n    value: function newOrderV3(_ix) {} // eslint-disable-next-line\n\n  }, {\n    key: \"cancelOrderV2\",\n    value: function cancelOrderV2(_ix) {} // eslint-disable-next-line\n\n  }, {\n    key: \"cancelOrderByClientIdV2\",\n    value: function cancelOrderByClientIdV2(_ix) {} // eslint-disable-next-line\n\n  }, {\n    key: \"settleFunds\",\n    value: function settleFunds(_ix) {} // eslint-disable-next-line\n\n  }, {\n    key: \"closeOpenOrders\",\n    value: function closeOpenOrders(_ix) {} // eslint-disable-next-line\n\n  }, {\n    key: \"prune\",\n    value: function prune(_ix) {}\n  }]);\n\n  return ReferralFees;\n}();\n\nexports.ReferralFees = ReferralFees;\n\nvar Logger = /*#__PURE__*/function () {\n  function Logger() {\n    _classCallCheck(this, Logger);\n  }\n\n  _createClass(Logger, [{\n    key: \"initOpenOrders\",\n    value: function initOpenOrders(ix) {\n      console.log('Proxying initOpenOrders', this.ixToDisplay(ix));\n    }\n  }, {\n    key: \"newOrderV3\",\n    value: function newOrderV3(ix) {\n      console.log('Proxying newOrderV3', this.ixToDisplay(ix));\n    }\n  }, {\n    key: \"cancelOrderV2\",\n    value: function cancelOrderV2(ix) {\n      console.log('Proxying cancelOrderV2', this.ixToDisplay(ix));\n    }\n  }, {\n    key: \"cancelOrderByClientIdV2\",\n    value: function cancelOrderByClientIdV2(ix) {\n      console.log('Proxying cancelOrderByClientIdV2', this.ixToDisplay(ix));\n    }\n  }, {\n    key: \"settleFunds\",\n    value: function settleFunds(ix) {\n      console.log('Proxying settleFunds', this.ixToDisplay(ix));\n    }\n  }, {\n    key: \"closeOpenOrders\",\n    value: function closeOpenOrders(ix) {\n      console.log('Proxying closeOpenOrders', this.ixToDisplay(ix));\n    }\n  }, {\n    key: \"prune\",\n    value: function prune(ix) {\n      console.log('Proxying prune', this.ixToDisplay(ix));\n    }\n  }, {\n    key: \"ixToDisplay\",\n    value: function ixToDisplay(ix) {\n      var keys = ix.keys.map(function (i) {\n        return _objectSpread(_objectSpread({}, i), {}, {\n          pubkey: i.pubkey.toString()\n        });\n      });\n      var programId = ix.programId.toString();\n      var data = new Uint8Array(ix.data);\n      return {\n        keys: keys,\n        programId: programId,\n        data: data\n      };\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.Logger = Logger;","map":null,"metadata":{},"sourceType":"script"}