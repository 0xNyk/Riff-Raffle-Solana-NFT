{"ast":null,"code":"var _jsxFileName = \"C:\\\\Riff-Raffle-Solana-NFT build 1-1\\\\app\\\\src\\\\components\\\\RaffleInfoSection\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogContent, DialogTitle, Typography } from '@material-ui/core';\nimport { useState } from 'react';\nimport CountUp from 'react-countup';\nimport { getDisplayAmount } from '../../lib/accounts';\nimport useCommonStyles from '../../assets/styles';\nimport { useStyles } from './styles';\nimport { useViewport } from '../../hooks/useViewport';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserTicketsDialog = ({\n  setOpen,\n  userTickets,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Dialog, { ...props,\n    onClose: () => setOpen(false),\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"My tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: userTickets === null || userTickets === void 0 ? void 0 : userTickets.map(userTicket => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"#\", userTicket + 1]\n      }, userTicket, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UserTicketsDialog;\n\nconst RaffleInfoSection = ({\n  userConnected,\n  raffle,\n  userTickets\n}) => {\n  _s();\n\n  var _userTickets$length;\n\n  const {\n    device\n  } = useViewport();\n  const classes = { ...useCommonStyles(),\n    ...useStyles({\n      device\n    })\n  };\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ticketsSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.totalTickets,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          className: classes.label,\n          children: \"Tickets sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.value,\n          children: [/*#__PURE__*/_jsxDEV(CountUp, {\n            start: 0,\n            end: raffle.totalTickets,\n            delay: 0,\n            duration: 0.8,\n            preserveValue: true,\n            useEasing: true,\n            children: ({\n              countUpRef\n            }) => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              ref: countUpRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            className: classes.separator,\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: `${raffle.entrantsCap}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ticketPrice,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          className: classes.label,\n          children: \"Ticket Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: `${getDisplayAmount(raffle.proceeds.ticketPrice, raffle.proceeds.mint)} ${raffle.proceeds.mint.symbol}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), userConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ticketsSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.myTickets,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          className: classes.label,\n          children: \"My tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.value,\n          children: /*#__PURE__*/_jsxDEV(CountUp, {\n            start: 0,\n            end: (_userTickets$length = userTickets === null || userTickets === void 0 ? void 0 : userTickets.length) !== null && _userTickets$length !== void 0 ? _userTickets$length : 0,\n            delay: 0,\n            duration: 0.8,\n            preserveValue: true,\n            useEasing: true,\n            children: ({\n              countUpRef\n            }) => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              ref: countUpRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), (userTickets === null || userTickets === void 0 ? void 0 : userTickets.length) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.showMyTickets,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          size: \"small\",\n          disableRipple: true,\n          onClick: () => {\n            setOpen(true);\n          },\n          className: classes.ticketButton,\n          children: \"See my tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(UserTicketsDialog, {\n          userTickets: userTickets,\n          open: open,\n          setOpen: setOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RaffleInfoSection, \"fXlHWyNflxHqvOsbiQFJ0NJRw+0=\", false, function () {\n  return [useViewport, useCommonStyles, useStyles];\n});\n\n_c2 = RaffleInfoSection;\nexport default RaffleInfoSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserTicketsDialog\");\n$RefreshReg$(_c2, \"RaffleInfoSection\");","map":{"version":3,"sources":["C:/Riff-Raffle-Solana-NFT build 1-1/app/src/components/RaffleInfoSection/index.tsx"],"names":["Button","Dialog","DialogContent","DialogTitle","Typography","useState","CountUp","getDisplayAmount","useCommonStyles","useStyles","useViewport","UserTicketsDialog","setOpen","userTickets","props","map","userTicket","RaffleInfoSection","userConnected","raffle","device","classes","open","root","ticketsSection","totalTickets","label","value","countUpRef","separator","entrantsCap","ticketPrice","proceeds","mint","symbol","myTickets","length","showMyTickets","ticketButton"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogProps,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { FC, useState } from 'react';\r\nimport CountUp from 'react-countup';\r\n\r\nimport { getDisplayAmount } from '../../lib/accounts';\r\nimport { Raffle } from '../../lib/types';\r\nimport useCommonStyles from '../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../hooks/useViewport';\r\n\r\ntype UserTicketsDialogProps = DialogProps & {\r\n  setOpen: (isOpen: boolean) => void;\r\n  userTickets?: number[];\r\n};\r\n\r\nconst UserTicketsDialog: FC<UserTicketsDialogProps> = ({\r\n  setOpen,\r\n  userTickets,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Dialog {...props} onClose={() => setOpen(false)} fullWidth={true}>\r\n      <DialogTitle>My tickets</DialogTitle>\r\n      <DialogContent>\r\n        {userTickets?.map((userTicket) => (\r\n          <div key={userTicket}>#{userTicket + 1}</div>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\ninterface RaffleInfoSectionProps {\r\n  raffle: Raffle;\r\n  userConnected: boolean;\r\n  userTickets?: number[];\r\n}\r\n\r\nconst RaffleInfoSection: FC<RaffleInfoSectionProps> = ({\r\n  userConnected,\r\n  raffle,\r\n  userTickets,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.ticketsSection}>\r\n        <div className={classes.totalTickets}>\r\n          <Typography variant=\"overline\" className={classes.label}>\r\n            Tickets sold\r\n          </Typography>\r\n          <div className={classes.value}>\r\n            <CountUp\r\n              start={0}\r\n              end={raffle.totalTickets}\r\n              delay={0}\r\n              duration={0.8}\r\n              preserveValue\r\n              useEasing\r\n            >\r\n              {({ countUpRef }) => <Typography variant=\"h4\" ref={countUpRef} />}\r\n            </CountUp>\r\n            <Typography variant=\"h4\" className={classes.separator}>\r\n              /\r\n            </Typography>\r\n            <Typography variant=\"h4\">{`${raffle.entrantsCap}`}</Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.ticketPrice}>\r\n          <Typography variant=\"overline\" className={classes.label}>\r\n            Ticket Price\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            {`${getDisplayAmount(\r\n              raffle.proceeds.ticketPrice,\r\n              raffle.proceeds.mint\r\n            )} ${raffle.proceeds.mint.symbol}`}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      {userConnected && (\r\n        <div className={classes.ticketsSection}>\r\n          <div className={classes.myTickets}>\r\n            <Typography variant=\"overline\" className={classes.label}>\r\n              My tickets\r\n            </Typography>\r\n            <div className={classes.value}>\r\n              <CountUp\r\n                start={0}\r\n                end={userTickets?.length ?? 0}\r\n                delay={0}\r\n                duration={0.8}\r\n                preserveValue\r\n                useEasing\r\n              >\r\n                {({ countUpRef }) => (\r\n                  <Typography variant=\"h4\" ref={countUpRef} />\r\n                )}\r\n              </CountUp>\r\n            </div>\r\n          </div>\r\n          {userTickets?.length && (\r\n            <div className={classes.showMyTickets}>\r\n              <Button\r\n                variant=\"text\"\r\n                size=\"small\"\r\n                disableRipple\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                }}\r\n                className={classes.ticketButton}\r\n              >\r\n                See my tickets\r\n              </Button>\r\n              <UserTicketsDialog\r\n                userTickets={userTickets}\r\n                open={open}\r\n                setOpen={setOpen}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RaffleInfoSection;\r\n"]},"metadata":{},"sourceType":"module"}