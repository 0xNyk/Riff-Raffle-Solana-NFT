[{"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\index.tsx":"1","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\reportWebVitals.ts":"2","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\App.tsx":"3","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\router\\router.tsx":"4","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\providers\\ProgramApisProvider.tsx":"5","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\providers\\RafflesStoreProvider.tsx":"6","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\providers\\ThemeProvider.tsx":"7","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\providers\\ViewportProvider.tsx":"8","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\router\\routes.ts":"9","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Wallet\\index.tsx":"10","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ScrollToTop\\index.tsx":"11","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\programIds.ts":"12","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\anchorUtils.ts":"13","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\raffleWhitelist.ts":"14","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\assets\\theme.ts":"15","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\router\\raffleDetails.tsx":"16","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\hooks\\useProgramApis.tsx":"17","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\hooks\\useViewport.tsx":"18","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ScrollToTop\\styles.ts":"19","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\store\\index.ts":"20","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\utils\\index.ts":"21","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\misc.ts":"22","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\AdminRoute\\index.tsx":"23","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\hooks\\useRafflesStore.ts":"24","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\admin\\AdminHomeScreen\\index.tsx":"25","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\ExploreRafflesScreen\\index.tsx":"26","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\admin\\AdminRaffleScreen\\index.tsx":"27","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\types.ts":"28","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\admin\\AdminRaffleScreen\\styles.ts":"29","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\index.tsx":"30","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\index.tsx":"31","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\ExploreRafflesScreen\\styles.ts":"32","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Spacer\\index.tsx":"33","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Screen\\index.tsx":"34","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\ExploreRafflesScreen\\components\\FilterBar\\index.tsx":"35","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\RaffleCard\\index.tsx":"36","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\ExploreRafflesScreen\\components\\FilterBar\\styles.ts":"37","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\styles.ts":"38","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\assets\\styles.ts":"39","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\randomnessTools.ts":"40","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\actions\\claimPrize.ts":"41","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\RaffleCard\\styles.ts":"42","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\accounts.ts":"43","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\styles.ts":"44","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PurchaseTicketsSection\\PurchaseTicket.tsx":"45","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Base\\index.tsx":"46","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Body\\index.tsx":"47","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Header\\index.tsx":"48","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\RaffleInfoSection\\index.tsx":"49","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeGalleryEnded\\index.tsx":"50","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeShowcaseEnded\\index.tsx":"51","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\EndedRaffleActionsSection\\index.tsx":"52","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Countdown\\index.tsx":"53","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeGalleryOngoing\\index.tsx":"54","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeShowcaseOngoing\\index.tsx":"55","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Base\\styles.ts":"56","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Header\\styles.ts":"57","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Body\\styles.ts":"58","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\EndedRaffleActionsSection\\styles.ts":"59","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeShowcaseEnded\\styles.ts":"60","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeGalleryEnded\\styles.ts":"61","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\RaffleInfoSection\\styles.ts":"62","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Countdown\\styles.ts":"63","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeGalleryOngoing\\styles.ts":"64","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeShowcaseOngoing\\styles.ts":"65","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\NavButton\\index.tsx":"66","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\WalletButton\\index.tsx":"67","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Drawer\\index.tsx":"68","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\AirdropButton\\index.tsx":"69","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeCardEnded\\index.tsx":"70","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ClaimButton\\index.tsx":"71","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PurchaseTicketsSection\\styles.ts":"72","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\tokenRegistry.ts":"73","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeCardOngoing\\index.tsx":"74","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\utils\\airdrop.ts":"75","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Drawer\\styles.ts":"76","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\WalletButton\\styles.ts":"77","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\NavButton\\styles.ts":"78","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ClaimButton\\styles.ts":"79","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeCardEnded\\styles.ts":"80","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\actions\\buyTickets.ts":"81","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\hooks\\useRandomDrawer.tsx":"82","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ShortenedString\\index.tsx":"83","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Button\\index.tsx":"84","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\accounts.ts":"85","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\PrizeDetailsModal\\index.tsx":"86","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeCardOngoing\\styles.ts":"87","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\PrizeDetailsModal\\styles.ts":"88","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\admin\\AdminHomeScreen\\styles.ts":"89","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\metadata\\index.ts":"90","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\metadata\\programIds.ts":"91","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\metadata\\borsh.ts":"92","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\index.tsx":"93","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\reportWebVitals.ts":"94","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\App.tsx":"95","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\router\\router.tsx":"96","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\providers\\ViewportProvider.tsx":"97","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\providers\\RafflesStoreProvider.tsx":"98","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\providers\\ProgramApisProvider.tsx":"99","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\providers\\ThemeProvider.tsx":"100","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\router\\routes.ts":"101","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Wallet\\index.tsx":"102","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ScrollToTop\\index.tsx":"103","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\anchorUtils.ts":"104","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\raffleWhitelist.ts":"105","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\programIds.ts":"106","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\assets\\theme.ts":"107","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\router\\raffleDetails.tsx":"108","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\hooks\\useProgramApis.tsx":"109","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\hooks\\useViewport.tsx":"110","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\store\\index.ts":"111","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\utils\\index.ts":"112","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\misc.ts":"113","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\hooks\\useRafflesStore.ts":"114","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\AdminRoute\\index.tsx":"115","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\ExploreRafflesScreen\\index.tsx":"116","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\admin\\AdminHomeScreen\\index.tsx":"117","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\admin\\AdminRaffleScreen\\index.tsx":"118","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ScrollToTop\\styles.ts":"119","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\types.ts":"120","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\admin\\AdminRaffleScreen\\styles.ts":"121","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\index.tsx":"122","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\index.tsx":"123","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\metadata\\index.ts":"124","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Spacer\\index.tsx":"125","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Screen\\index.tsx":"126","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\metadata\\borsh.ts":"127","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\metadata\\programIds.ts":"128","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Base\\index.tsx":"129","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Header\\index.tsx":"130","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Body\\index.tsx":"131","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Base\\styles.ts":"132","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Body\\styles.ts":"133","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Header\\styles.ts":"134","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\styles.ts":"135","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\assets\\styles.ts":"136","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\randomnessTools.ts":"137","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\actions\\claimPrize.ts":"138","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\WalletButton\\index.tsx":"139","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\NavButton\\index.tsx":"140","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Drawer\\index.tsx":"141","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\AirdropButton\\index.tsx":"142","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\styles.ts":"143","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PurchaseTicketsSection\\PurchaseTicket.tsx":"144","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\accounts.ts":"145","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\RaffleInfoSection\\index.tsx":"146","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\utils\\airdrop.ts":"147","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeShowcaseEnded\\index.tsx":"148","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeGalleryEnded\\index.tsx":"149","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\EndedRaffleActionsSection\\index.tsx":"150","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Drawer\\styles.ts":"151","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\WalletButton\\styles.ts":"152","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\NavButton\\styles.ts":"153","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeGalleryOngoing\\index.tsx":"154","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeShowcaseOngoing\\index.tsx":"155","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Countdown\\index.tsx":"156","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PurchaseTicketsSection\\styles.ts":"157","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\tokenRegistry.ts":"158","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\actions\\buyTickets.ts":"159","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\RaffleInfoSection\\styles.ts":"160","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\EndedRaffleActionsSection\\styles.ts":"161","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeGalleryEnded\\styles.ts":"162","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeShowcaseEnded\\styles.ts":"163","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeGalleryOngoing\\styles.ts":"164","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Countdown\\styles.ts":"165","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeShowcaseOngoing\\styles.ts":"166","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ShortenedString\\index.tsx":"167","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\accounts.ts":"168","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Button\\index.tsx":"169","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeCardEnded\\index.tsx":"170","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ClaimButton\\index.tsx":"171","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeCardOngoing\\index.tsx":"172","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ClaimButton\\styles.ts":"173","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeCardOngoing\\styles.ts":"174","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeCardEnded\\styles.ts":"175","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\hooks\\useRandomDrawer.tsx":"176","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\PrizeDetailsModal\\index.tsx":"177","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\PrizeDetailsModal\\styles.ts":"178","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\admin\\AdminHomeScreen\\styles.ts":"179","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\ExploreRafflesScreen\\styles.ts":"180","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\RaffleCard\\index.tsx":"181","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\ExploreRafflesScreen\\components\\FilterBar\\index.tsx":"182","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\RaffleCard\\styles.ts":"183","C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\ExploreRafflesScreen\\components\\FilterBar\\styles.ts":"184"},{"size":517,"mtime":1657515937648,"results":"185","hashOfConfig":"186"},{"size":440,"mtime":1657515937663,"results":"187","hashOfConfig":"186"},{"size":1303,"mtime":1657515937626,"results":"188","hashOfConfig":"186"},{"size":874,"mtime":1657515937663,"results":"189","hashOfConfig":"186"},{"size":2389,"mtime":1657515937663,"results":"190","hashOfConfig":"186"},{"size":6303,"mtime":1657515937663,"results":"191","hashOfConfig":"186"},{"size":425,"mtime":1657515937663,"results":"192","hashOfConfig":"186"},{"size":1283,"mtime":1657515937663,"results":"193","hashOfConfig":"186"},{"size":233,"mtime":1657515937663,"results":"194","hashOfConfig":"186"},{"size":2037,"mtime":1657515937632,"results":"195","hashOfConfig":"186"},{"size":1272,"mtime":1657515937632,"results":"196","hashOfConfig":"186"},{"size":513,"mtime":1657515937648,"results":"197","hashOfConfig":"186"},{"size":2498,"mtime":1657515937648,"results":"198","hashOfConfig":"186"},{"size":1972,"mtime":1657918657593,"results":"199","hashOfConfig":"186"},{"size":1638,"mtime":1657630862280,"results":"200","hashOfConfig":"186"},{"size":1688,"mtime":1657515937663,"results":"201","hashOfConfig":"186"},{"size":343,"mtime":1657515937648,"results":"202","hashOfConfig":"186"},{"size":325,"mtime":1657515937648,"results":"203","hashOfConfig":"186"},{"size":840,"mtime":1657515937632,"results":"204","hashOfConfig":"186"},{"size":7059,"mtime":1657515937648,"results":"205","hashOfConfig":"186"},{"size":2174,"mtime":1657515937648,"results":"206","hashOfConfig":"186"},{"size":115,"mtime":1657515937648,"results":"207","hashOfConfig":"186"},{"size":927,"mtime":1657515937632,"results":"208","hashOfConfig":"186"},{"size":366,"mtime":1657515937648,"results":"209","hashOfConfig":"186"},{"size":7441,"mtime":1657515937663,"results":"210","hashOfConfig":"186"},{"size":3299,"mtime":1657910584343,"results":"211","hashOfConfig":"186"},{"size":3084,"mtime":1657515937663,"results":"212","hashOfConfig":"186"},{"size":1642,"mtime":1657515937648,"results":"213","hashOfConfig":"186"},{"size":609,"mtime":1657515937663,"results":"214","hashOfConfig":"186"},{"size":7079,"mtime":1657515937663,"results":"215","hashOfConfig":"186"},{"size":8642,"mtime":1657515937663,"results":"216","hashOfConfig":"186"},{"size":714,"mtime":1657515937648,"results":"217","hashOfConfig":"186"},{"size":220,"mtime":1657515937632,"results":"218","hashOfConfig":"186"},{"size":429,"mtime":1657515937632,"results":"219","hashOfConfig":"186"},{"size":4162,"mtime":1657911270790,"results":"220","hashOfConfig":"186"},{"size":4021,"mtime":1657515937632,"results":"221","hashOfConfig":"186"},{"size":1747,"mtime":1657515937648,"results":"222","hashOfConfig":"186"},{"size":3385,"mtime":1657640817493,"results":"223","hashOfConfig":"186"},{"size":1198,"mtime":1657515937627,"results":"224","hashOfConfig":"186"},{"size":390,"mtime":1657515937648,"results":"225","hashOfConfig":"186"},{"size":1768,"mtime":1657887302377,"results":"226","hashOfConfig":"186"},{"size":2435,"mtime":1657515937632,"results":"227","hashOfConfig":"186"},{"size":2117,"mtime":1657515937648,"results":"228","hashOfConfig":"186"},{"size":3870,"mtime":1657910930239,"results":"229","hashOfConfig":"186"},{"size":17567,"mtime":1657515937663,"results":"230","hashOfConfig":"186"},{"size":363,"mtime":1657515937632,"results":"231","hashOfConfig":"186"},{"size":635,"mtime":1657515937632,"results":"232","hashOfConfig":"186"},{"size":3706,"mtime":1657624102519,"results":"233","hashOfConfig":"186"},{"size":4069,"mtime":1657515937632,"results":"234","hashOfConfig":"186"},{"size":2519,"mtime":1657515937663,"results":"235","hashOfConfig":"186"},{"size":3051,"mtime":1657515937663,"results":"236","hashOfConfig":"186"},{"size":4383,"mtime":1657515937663,"results":"237","hashOfConfig":"186"},{"size":4056,"mtime":1657515937632,"results":"238","hashOfConfig":"186"},{"size":1458,"mtime":1657515937663,"results":"239","hashOfConfig":"186"},{"size":2437,"mtime":1657515937663,"results":"240","hashOfConfig":"186"},{"size":541,"mtime":1657657373810,"results":"241","hashOfConfig":"186"},{"size":1608,"mtime":1657528750872,"results":"242","hashOfConfig":"186"},{"size":507,"mtime":1657515937632,"results":"243","hashOfConfig":"186"},{"size":720,"mtime":1657515937663,"results":"244","hashOfConfig":"186"},{"size":683,"mtime":1657515937663,"results":"245","hashOfConfig":"186"},{"size":1169,"mtime":1657515937663,"results":"246","hashOfConfig":"186"},{"size":1244,"mtime":1657515937632,"results":"247","hashOfConfig":"186"},{"size":314,"mtime":1657515937632,"results":"248","hashOfConfig":"186"},{"size":678,"mtime":1657515937663,"results":"249","hashOfConfig":"186"},{"size":683,"mtime":1657515937663,"results":"250","hashOfConfig":"186"},{"size":1075,"mtime":1657515937632,"results":"251","hashOfConfig":"186"},{"size":564,"mtime":1657515937648,"results":"252","hashOfConfig":"186"},{"size":1884,"mtime":1657515937632,"results":"253","hashOfConfig":"186"},{"size":936,"mtime":1657515937632,"results":"254","hashOfConfig":"186"},{"size":4448,"mtime":1657515937663,"results":"255","hashOfConfig":"186"},{"size":1906,"mtime":1657515937632,"results":"256","hashOfConfig":"186"},{"size":4061,"mtime":1657515937663,"results":"257","hashOfConfig":"186"},{"size":3914,"mtime":1657902657097,"results":"258","hashOfConfig":"186"},{"size":2718,"mtime":1657515937663,"results":"259","hashOfConfig":"186"},{"size":1755,"mtime":1657515937648,"results":"260","hashOfConfig":"186"},{"size":929,"mtime":1657527688292,"results":"261","hashOfConfig":"186"},{"size":993,"mtime":1657515937648,"results":"262","hashOfConfig":"186"},{"size":517,"mtime":1657624161027,"results":"263","hashOfConfig":"186"},{"size":688,"mtime":1657515937632,"results":"264","hashOfConfig":"186"},{"size":2788,"mtime":1657515937663,"results":"265","hashOfConfig":"186"},{"size":4834,"mtime":1657887289026,"results":"266","hashOfConfig":"186"},{"size":1291,"mtime":1657515937648,"results":"267","hashOfConfig":"186"},{"size":645,"mtime":1657515937632,"results":"268","hashOfConfig":"186"},{"size":275,"mtime":1657515937632,"results":"269","hashOfConfig":"186"},{"size":938,"mtime":1657515937648,"results":"270","hashOfConfig":"186"},{"size":3569,"mtime":1657515937632,"results":"271","hashOfConfig":"186"},{"size":2242,"mtime":1657515937663,"results":"272","hashOfConfig":"186"},{"size":2060,"mtime":1657515937632,"results":"273","hashOfConfig":"186"},{"size":901,"mtime":1657515937663,"results":"274","hashOfConfig":"186"},{"size":12086,"mtime":1657515937648,"results":"275","hashOfConfig":"186"},{"size":144,"mtime":1657515937648,"results":"276","hashOfConfig":"186"},{"size":1047,"mtime":1657515937648,"results":"277","hashOfConfig":"186"},{"size":517,"mtime":1657515937648,"results":"278","hashOfConfig":"279"},{"size":440,"mtime":1657515937663,"results":"280","hashOfConfig":"279"},{"size":1303,"mtime":1657515937626,"results":"281","hashOfConfig":"279"},{"size":874,"mtime":1657515937663,"results":"282","hashOfConfig":"279"},{"size":1283,"mtime":1657515937663,"results":"283","hashOfConfig":"279"},{"size":6303,"mtime":1657515937663,"results":"284","hashOfConfig":"279"},{"size":2389,"mtime":1657515937663,"results":"285","hashOfConfig":"279"},{"size":425,"mtime":1657515937663,"results":"286","hashOfConfig":"279"},{"size":233,"mtime":1657515937663,"results":"287","hashOfConfig":"279"},{"size":2037,"mtime":1657515937632,"results":"288","hashOfConfig":"279"},{"size":1272,"mtime":1657515937632,"results":"289","hashOfConfig":"279"},{"size":2498,"mtime":1657515937648,"results":"290","hashOfConfig":"279"},{"size":1971,"mtime":1657926476625,"results":"291","hashOfConfig":"279"},{"size":513,"mtime":1657515937648,"results":"292","hashOfConfig":"279"},{"size":1638,"mtime":1657630862280,"results":"293","hashOfConfig":"279"},{"size":1688,"mtime":1657515937663,"results":"294","hashOfConfig":"279"},{"size":343,"mtime":1657515937648,"results":"295","hashOfConfig":"279"},{"size":325,"mtime":1657515937648,"results":"296","hashOfConfig":"279"},{"size":7059,"mtime":1657515937648,"results":"297","hashOfConfig":"279"},{"size":2174,"mtime":1657515937648,"results":"298","hashOfConfig":"279"},{"size":115,"mtime":1657515937648,"results":"299","hashOfConfig":"279"},{"size":366,"mtime":1657515937648,"results":"300","hashOfConfig":"279"},{"size":927,"mtime":1657515937632,"results":"301","hashOfConfig":"279"},{"size":3299,"mtime":1657910584343,"results":"302","hashOfConfig":"279"},{"size":7441,"mtime":1657515937663,"results":"303","hashOfConfig":"279"},{"size":3084,"mtime":1657515937663,"results":"304","hashOfConfig":"279"},{"size":840,"mtime":1657515937632,"results":"305","hashOfConfig":"279"},{"size":1642,"mtime":1657515937648,"results":"306","hashOfConfig":"279"},{"size":609,"mtime":1657515937663,"results":"307","hashOfConfig":"279"},{"size":7079,"mtime":1657515937663,"results":"308","hashOfConfig":"279"},{"size":8642,"mtime":1657515937663,"results":"309","hashOfConfig":"279"},{"size":12086,"mtime":1657515937648,"results":"310","hashOfConfig":"279"},{"size":220,"mtime":1657515937632,"results":"311","hashOfConfig":"279"},{"size":429,"mtime":1657515937632,"results":"312","hashOfConfig":"279"},{"size":1047,"mtime":1657515937648,"results":"313","hashOfConfig":"279"},{"size":144,"mtime":1657515937648,"results":"314","hashOfConfig":"279"},{"size":363,"mtime":1657515937632,"results":"315","hashOfConfig":"279"},{"size":3706,"mtime":1657624102519,"results":"316","hashOfConfig":"279"},{"size":635,"mtime":1657515937632,"results":"317","hashOfConfig":"279"},{"size":541,"mtime":1657657373810,"results":"318","hashOfConfig":"279"},{"size":507,"mtime":1657515937632,"results":"319","hashOfConfig":"279"},{"size":1608,"mtime":1657528750872,"results":"320","hashOfConfig":"279"},{"size":3385,"mtime":1657640817493,"results":"321","hashOfConfig":"279"},{"size":1198,"mtime":1657515937627,"results":"322","hashOfConfig":"279"},{"size":390,"mtime":1657515937648,"results":"323","hashOfConfig":"279"},{"size":1768,"mtime":1657887302377,"results":"324","hashOfConfig":"279"},{"size":564,"mtime":1657515937648,"results":"325","hashOfConfig":"279"},{"size":1075,"mtime":1657515937632,"results":"326","hashOfConfig":"279"},{"size":1884,"mtime":1657515937632,"results":"327","hashOfConfig":"279"},{"size":936,"mtime":1657515937632,"results":"328","hashOfConfig":"279"},{"size":3870,"mtime":1657910930239,"results":"329","hashOfConfig":"279"},{"size":17567,"mtime":1657515937663,"results":"330","hashOfConfig":"279"},{"size":2117,"mtime":1657515937648,"results":"331","hashOfConfig":"279"},{"size":4069,"mtime":1657515937632,"results":"332","hashOfConfig":"279"},{"size":1755,"mtime":1657515937648,"results":"333","hashOfConfig":"279"},{"size":3051,"mtime":1657515937663,"results":"334","hashOfConfig":"279"},{"size":2519,"mtime":1657515937663,"results":"335","hashOfConfig":"279"},{"size":4383,"mtime":1657515937663,"results":"336","hashOfConfig":"279"},{"size":929,"mtime":1657527688292,"results":"337","hashOfConfig":"279"},{"size":993,"mtime":1657515937648,"results":"338","hashOfConfig":"279"},{"size":517,"mtime":1657624161027,"results":"339","hashOfConfig":"279"},{"size":1458,"mtime":1657515937663,"results":"340","hashOfConfig":"279"},{"size":2437,"mtime":1657515937663,"results":"341","hashOfConfig":"279"},{"size":4056,"mtime":1657515937632,"results":"342","hashOfConfig":"279"},{"size":4061,"mtime":1657515937663,"results":"343","hashOfConfig":"279"},{"size":3914,"mtime":1657902657097,"results":"344","hashOfConfig":"279"},{"size":4834,"mtime":1657887289026,"results":"345","hashOfConfig":"279"},{"size":1244,"mtime":1657515937632,"results":"346","hashOfConfig":"279"},{"size":720,"mtime":1657515937663,"results":"347","hashOfConfig":"279"},{"size":1169,"mtime":1657515937663,"results":"348","hashOfConfig":"279"},{"size":683,"mtime":1657515937663,"results":"349","hashOfConfig":"279"},{"size":678,"mtime":1657515937663,"results":"350","hashOfConfig":"279"},{"size":314,"mtime":1657515937632,"results":"351","hashOfConfig":"279"},{"size":683,"mtime":1657515937663,"results":"352","hashOfConfig":"279"},{"size":645,"mtime":1657515937632,"results":"353","hashOfConfig":"279"},{"size":938,"mtime":1657515937648,"results":"354","hashOfConfig":"279"},{"size":275,"mtime":1657515937632,"results":"355","hashOfConfig":"279"},{"size":4448,"mtime":1657515937663,"results":"356","hashOfConfig":"279"},{"size":1906,"mtime":1657515937632,"results":"357","hashOfConfig":"279"},{"size":2718,"mtime":1657515937663,"results":"358","hashOfConfig":"279"},{"size":688,"mtime":1657515937632,"results":"359","hashOfConfig":"279"},{"size":2242,"mtime":1657515937663,"results":"360","hashOfConfig":"279"},{"size":2788,"mtime":1657515937663,"results":"361","hashOfConfig":"279"},{"size":1291,"mtime":1657515937648,"results":"362","hashOfConfig":"279"},{"size":3569,"mtime":1657515937632,"results":"363","hashOfConfig":"279"},{"size":2060,"mtime":1657515937632,"results":"364","hashOfConfig":"279"},{"size":901,"mtime":1657515937663,"results":"365","hashOfConfig":"279"},{"size":714,"mtime":1657515937648,"results":"366","hashOfConfig":"279"},{"size":4021,"mtime":1657515937632,"results":"367","hashOfConfig":"279"},{"size":4162,"mtime":1657911270790,"results":"368","hashOfConfig":"279"},{"size":2435,"mtime":1657515937632,"results":"369","hashOfConfig":"279"},{"size":1747,"mtime":1657515937648,"results":"370","hashOfConfig":"279"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},"t170rk",{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"373"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"373"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"373"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"373"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"373"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"373"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"373"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"373"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"373"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"373"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},"15yl8c7",{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"568"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"568"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"568"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"568"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"568"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"568"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"568"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"568"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"568"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"568"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\index.tsx",[],["751","752"],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\reportWebVitals.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\App.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\router\\router.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\providers\\ProgramApisProvider.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\providers\\RafflesStoreProvider.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\providers\\ThemeProvider.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\providers\\ViewportProvider.tsx",["753"],"import React, { FC } from 'react';\r\n\r\nexport enum DeviceType {\r\n  Phone = 0,\r\n  Tablet = 1,\r\n  Desktop = 2,\r\n}\r\n\r\nconst PHONE_BREAKPOINT = 600;\r\nconst TABLET_BREAKPOINT = 768;\r\n\r\nexport interface ViewportInfo {\r\n  device: DeviceType;\r\n}\r\n\r\n// @ts-ignore\r\nexport const ViewportContext = React.createContext<ViewportInfo>();\r\n\r\nconst ViewportProvider: FC = ({ children }) => {\r\n  const [device, setDevice] = React.useState(DeviceType.Desktop);\r\n\r\n  React.useEffect(() => {\r\n    const handleWindowResize = () => {\r\n      if (window.innerWidth < PHONE_BREAKPOINT && device !== DeviceType.Phone)\r\n        setDevice(DeviceType.Phone);\r\n      else if (\r\n        window.innerWidth < TABLET_BREAKPOINT &&\r\n        device !== DeviceType.Tablet\r\n      )\r\n        setDevice(DeviceType.Tablet);\r\n      else if (\r\n        window.innerWidth >= TABLET_BREAKPOINT &&\r\n        device !== DeviceType.Desktop\r\n      )\r\n        setDevice(DeviceType.Desktop);\r\n    };\r\n    handleWindowResize();\r\n    window.addEventListener('resize', handleWindowResize);\r\n    return () => window.removeEventListener('resize', handleWindowResize);\r\n  }, []);\r\n\r\n  return (\r\n    <ViewportContext.Provider value={{ device }}>\r\n      {children}\r\n    </ViewportContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ViewportProvider;\r\n","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\router\\routes.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Wallet\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ScrollToTop\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\programIds.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\anchorUtils.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\raffleWhitelist.ts",["754"],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\assets\\theme.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\router\\raffleDetails.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\hooks\\useProgramApis.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\hooks\\useViewport.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ScrollToTop\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\store\\index.ts",["755"],"import { AccountsCoder, ProgramAccount } from '@project-serum/anchor';\r\nimport { connection, parseTokenAccount } from '@project-serum/common';\r\nimport { u64, AccountInfo as TokenAccountInfo } from '@solana/spl-token';\r\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\n\r\nimport { tokenInfoMap, UNKNOWN_TOKEN_INFO } from '../../config/tokenRegistry';\r\nimport {\r\n  DraffleProgram,\r\n  EntrantsDataRaw,\r\n  RaffleDataRaw,\r\n} from '../../providers/ProgramApisProvider';\r\nimport { getDisplayAmount } from '../accounts';\r\nimport { getMetadata, getNFTMetadata } from '../metadata';\r\nimport { Entrant, EntrantsMap, Mint, Prize, PrizeType } from '../types';\r\n\r\nexport const fetchProceedsAccount = async (\r\n  raffleAccountAddress: PublicKey,\r\n  draffleClient: DraffleProgram,\r\n  connection: Connection\r\n): Promise<{ address: PublicKey; mintInfo: Mint }> => {\r\n  const [address] = await PublicKey.findProgramAddress(\r\n    [raffleAccountAddress.toBytes(), Buffer.from('proceeds')],\r\n    draffleClient.programId\r\n  );\r\n\r\n  const account = await connection.getAccountInfo(address);\r\n  if (!account) throw Error('Failed to fetch proceeds account');\r\n  const data = parseTokenAccount(account.data);\r\n  const tokenInfo = tokenInfoMap.get(data.mint.toString());\r\n  if (!tokenInfo)\r\n    throw Error(\r\n      `Info not found for proceeds account mint ${data.mint.toString()}`\r\n    );\r\n  const mintInfo = {\r\n    name: tokenInfo.name,\r\n    publicKey: data.mint,\r\n    logoUrl: tokenInfo.logoURI,\r\n    symbol: tokenInfo.symbol,\r\n    decimals: tokenInfo.decimals,\r\n  };\r\n  return { address, mintInfo };\r\n};\r\n\r\nconst getPrizeAddressForPrizeIndex = async (\r\n  raffleAccountAddress: PublicKey,\r\n  prizeIndex: number,\r\n  programId: PublicKey\r\n): Promise<PublicKey> => {\r\n  const [prizeAddress] = await PublicKey.findProgramAddress(\r\n    [\r\n      raffleAccountAddress.toBuffer(),\r\n      Buffer.from('prize'),\r\n      new u64(prizeIndex).toArrayLike(Buffer, 'le', 4),\r\n    ],\r\n    programId\r\n  );\r\n  return prizeAddress;\r\n};\r\n\r\n// Batch fetch prize token accounts then batch fetch metadata accounts given mint\r\nexport const fetchPrizes = async (\r\n  raffleAccountAddress: PublicKey,\r\n  draffleClient: DraffleProgram,\r\n  totalPrizes: number,\r\n): Promise<Prize[]> => {\r\n  let prizes: Prize[] = [];\r\n\r\n  const prizeAddresses = await Promise.all(\r\n    [...Array(totalPrizes).keys()].map((prizeIndex) =>\r\n      getPrizeAddressForPrizeIndex(\r\n        raffleAccountAddress,\r\n        prizeIndex,\r\n        draffleClient.programId\r\n      )\r\n    )\r\n  );\r\n  const prizeAccounts =\r\n    await draffleClient.provider.connection.getMultipleAccountsInfo(\r\n      prizeAddresses\r\n    );\r\n  \r\n  const prizeTokenAccounts = prizeAccounts.map((prizeAccount) => {\r\n    if (!prizeAccount) {\r\n      throw new Error('Invalid prize account');\r\n    }\r\n    return parseTokenAccount(prizeAccount.data);\r\n  });\r\n\r\n  const metadataAddresses = await Promise.all(\r\n    prizeTokenAccounts.map((prizeTokenAccount) => getMetadata(prizeTokenAccount.mint))\r\n  );\r\n\r\n  const metadataAccountsInfos = await draffleClient.provider.connection.getMultipleAccountsInfo(\r\n    metadataAddresses\r\n  );\r\n\r\n  for (const [index, prizeTokenAccount] of prizeTokenAccounts.entries()) {\r\n    prizes.push(\r\n      await processPrize(\r\n        prizeAddresses[index],\r\n        prizeTokenAccount,\r\n        metadataAccountsInfos[index],\r\n      )\r\n    );\r\n  }\r\n  return prizes;\r\n};\r\n\r\nconst processPrize = async (\r\n  prizeAddress: PublicKey,\r\n  prizeTokenAccount: TokenAccountInfo,\r\n  metadataAccountInfo: AccountInfo<Buffer> | null\r\n): Promise<Prize> => {\r\n  let mintInfo;\r\n  const tokenInfo = tokenInfoMap.get(prizeTokenAccount.mint.toString());\r\n  if (tokenInfo) {\r\n    const name = `${getDisplayAmount(prizeTokenAccount.amount, tokenInfo)} ${tokenInfo.symbol}`;\r\n    const imageURI = (tokenInfo as any)?.extensions?.imageURI\r\n    mintInfo = {\r\n      name,\r\n      publicKey: prizeTokenAccount.mint,\r\n      logoUrl: tokenInfo.logoURI,\r\n      symbol: tokenInfo.symbol,\r\n      decimals: tokenInfo.decimals,\r\n    };\r\n    return {\r\n      address: prizeAddress,\r\n      mint: mintInfo,\r\n      amount: prizeTokenAccount.amount,\r\n      type: PrizeType.FT,\r\n      meta: {\r\n        imageUri: imageURI || tokenInfo.logoURI,\r\n      },\r\n    };\r\n  } else {\r\n    // It isn't a recognized fungible token so it might be a NFT\r\n    const meta = metadataAccountInfo\r\n      ? await getNFTMetadata(metadataAccountInfo)\r\n      : undefined;\r\n\r\n    // TODO: Need to distinguish between NFT types to fill correct attributes\r\n    const tokenInfo = UNKNOWN_TOKEN_INFO;\r\n    mintInfo = {\r\n      name: meta?.name || tokenInfo.name,\r\n      publicKey: prizeTokenAccount.mint,\r\n      logoUrl: meta?.image || tokenInfo.logoURI,\r\n      symbol: tokenInfo.symbol,\r\n      decimals: tokenInfo.decimals,\r\n    };\r\n    return {\r\n      address: prizeAddress,\r\n      mint: mintInfo,\r\n      amount: prizeTokenAccount.amount,\r\n      type: PrizeType.NFTPicture,\r\n      meta: {\r\n        name: meta?.name || tokenInfo.name,\r\n        imageUri: meta?.image || tokenInfo.name,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport const toEntrantsProcessed = (entrantsDataRaw: EntrantsDataRaw) => {\r\n  const entrantsProcessed = entrantsDataRaw.entrants\r\n    .slice(0, entrantsDataRaw.total)\r\n    .reduce<EntrantsMap>((acc, entrant, index) => {\r\n      if (acc.has(entrant.toString())) {\r\n        acc.get(entrant.toString())!.tickets.push(index);\r\n      } else {\r\n        acc.set(entrant.toString(), {\r\n          publicKey: entrant,\r\n          tickets: [index],\r\n        });\r\n      }\r\n      return acc;\r\n    }, new Map<string, Entrant>());\r\n\r\n  return entrantsProcessed;\r\n}\r\n\r\nexport const getRaffleProgramAccounts = async (\r\n  draffleClient: DraffleProgram\r\n  ): Promise<[a: ProgramAccount<RaffleDataRaw>[], b: ProgramAccount<EntrantsDataRaw>[]]> => {\r\n\r\n  const result = await draffleClient.provider.connection.getProgramAccounts(\r\n    draffleClient.programId\r\n  );\r\n  const raffleDiscriminator = AccountsCoder.accountDiscriminator('Raffle');\r\n  const entrantsDiscriminator = AccountsCoder.accountDiscriminator('Entrants');\r\n\r\n  const raffleDataRawProgramAccounts: ProgramAccount<RaffleDataRaw>[] = [];\r\n  const entrantsDataRawProgramAccounts: ProgramAccount<EntrantsDataRaw>[] = [];\r\n\r\n  result.forEach(({ pubkey, account }) => {\r\n    const discriminator = account.data.slice(0, 8);\r\n\r\n    if (raffleDiscriminator.compare(discriminator) === 0) {\r\n      raffleDataRawProgramAccounts.push({\r\n        publicKey: pubkey,\r\n        account: draffleClient.coder.accounts.decode<RaffleDataRaw>(\r\n          'Raffle',\r\n          account.data\r\n        )\r\n      });\r\n    } else if (entrantsDiscriminator.compare(discriminator) === 0) {\r\n      entrantsDataRawProgramAccounts.push({\r\n        publicKey: pubkey,\r\n        account: draffleClient.coder.accounts.decode<EntrantsDataRaw>(\r\n          'Entrants',\r\n          account.data\r\n        )\r\n      });\r\n    } else {\r\n      console.log(`Could not decode ${pubkey.toBase58()}`);\r\n    }\r\n  });\r\n  return [raffleDataRawProgramAccounts, entrantsDataRawProgramAccounts];\r\n}","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\utils\\index.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\misc.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\AdminRoute\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\hooks\\useRafflesStore.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\admin\\AdminHomeScreen\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\ExploreRafflesScreen\\index.tsx",["756"],"import { FC, useEffect, useMemo, useState } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport RaffleCard from '../../components/RaffleCard';\r\nimport { useStyles } from './styles';\r\nimport { useRafflesStore } from '../../hooks/useRafflesStore';\r\nimport Screen from '../../components/layout/Screen';\r\nimport { Raffle } from '../../lib/types';\r\nimport { useViewport } from '../../hooks/useViewport';\r\nimport FilterBar from './components/FilterBar';\r\nimport topLogo from '../../assets/topLogo.gif';\r\n\r\nconst ExploreRafflesScreen: FC = () => {\r\n  console.log(process.env.NODE_ENV);\r\n  console.log(process.env.REACT_APP_TESTING);\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  const { publicKey } = useWallet();\r\n  const { raffles, fetchAllRaffles, fetching } = useRafflesStore();\r\n  const [showOwnRafflesOnly, setShowOwnRafflesOnly] = useState(false);\r\n  const [hideEndedRaffles, setHideEndedRaffles] = useState(false);\r\n\r\n  useEffect(fetchAllRaffles, [fetchAllRaffles]);\r\n\r\n  const filterMap = useMemo(\r\n    () => ({\r\n      own: (raffle: Raffle) => raffle.entrants.has(publicKey?.toString() || ''),\r\n      ongoing: (raffle: Raffle) => new Date() < raffle.endTimestamp,\r\n    }),\r\n    [publicKey]\r\n  );\r\n\r\n  const rafflesToShow = useMemo(() => {\r\n    let toShow = [...raffles.values()].sort(\r\n      (raffle1, raffle2) =>\r\n        raffle2.endTimestamp.getTime() - raffle1.endTimestamp.getTime()\r\n    );\r\n    if (showOwnRafflesOnly) toShow = toShow.filter(filterMap.own);\r\n    if (hideEndedRaffles) toShow = toShow.filter(filterMap.ongoing);\r\n    return toShow;\r\n  }, [raffles, filterMap, showOwnRafflesOnly, hideEndedRaffles]);\r\n\r\n  if (raffles.size === 0 && fetching)\r\n    return (\r\n      <>\r\n        <div className={classes.mainContent}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      </>\r\n    );\r\n\r\n  if (raffles.size === 0)\r\n    return (\r\n      <>\r\n        <Typography variant=\"h1\" className={classes.titleBar}>\r\n          WTF is Coming Soon??\r\n        </Typography>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <img src={''} alt={''} />\r\n      <FilterBar\r\n        hideEndedRaffles={hideEndedRaffles}\r\n        setHideEndedRaffles={setHideEndedRaffles}\r\n        setShowOwnRafflesOnly={setShowOwnRafflesOnly}\r\n      />\r\n      {rafflesToShow.length > 0 ? (\r\n        <Grid\r\n          container\r\n          justifyContent={'center'}\r\n          direction={'row'}\r\n          className={classes.rafflesGrid}\r\n        >\r\n          {rafflesToShow\r\n            .filter((r) => r.prizes.length > 0)\r\n            .map((raffle) => (\r\n              <RaffleCard\r\n                key={raffle.publicKey.toString()}\r\n                className={classes.raffleCardContainer}\r\n                raffle={raffle}\r\n              />\r\n            ))}\r\n        </Grid>\r\n      ) : (\r\n        <Typography variant=\"h4\" className={classes.mainContent}>\r\n          WTF is going on?? More Raffles Coming Soon.\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ExploreRafflesScreenWithLayout = () => (\r\n  <Screen>\r\n    <ExploreRafflesScreen />\r\n  </Screen>\r\n);\r\n\r\nexport default ExploreRafflesScreenWithLayout;\r\n","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\admin\\AdminRaffleScreen\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\types.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\admin\\AdminRaffleScreen\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\index.tsx",["757"],"import { FC, useMemo, useRef } from 'react';\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-material-ui';\r\nimport { ArrowBack, DoubleArrow } from '@material-ui/icons';\r\nimport { Button, IconButton, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { useProgramApis } from '../../hooks/useProgramApis';\r\nimport { Raffle } from '../../lib/types';\r\nimport Countdown from '../../components/Countdown';\r\nimport PrizeShowcaseOngoing from './components/PrizeShowcaseOngoing';\r\nimport RaffleInfoSection from '../../components/RaffleInfoSection';\r\nimport { PurchaseTickets } from './components/PurchaseTicketsSection/PurchaseTicket';\r\nimport { routes } from '../../router/routes';\r\nimport Screen from '../../components/layout/Screen';\r\nimport useCommonStyles from '../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport PrizeGalleryOngoing from './components/PrizeGalleryOngoing';\r\nimport { useViewport } from '../../hooks/useViewport';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\nimport Spacer from '../../components/Spacer';\r\n\r\ninterface IRaffleOngoingScreenProps {\r\n  raffle: Raffle;\r\n  updateRaffle: () => void;\r\n}\r\n\r\nconst RaffleOngoingScreen: FC<IRaffleOngoingScreenProps> = ({\r\n  raffle,\r\n  updateRaffle,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n  const { push } = useHistory();\r\n  const { draffleClient } = useProgramApis();\r\n\r\n  const prizeGalleryRef = useRef<HTMLDivElement>(null);\r\n\r\n  const entrant = useMemo(() => {\r\n    if (!draffleClient.provider.wallet?.publicKey) return;\r\n    return raffle?.entrants.get(\r\n      draffleClient.provider.wallet.publicKey.toString()\r\n    );\r\n  }, [raffle, draffleClient.provider.wallet?.publicKey]); // \"Unnecessary\" dependency required due to React not picking up change in publicKey subfield\r\n\r\n  if (!raffle) return null;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {device === DeviceType.Phone ? (\r\n        <>\r\n          <Typography variant=\"h1\">{`> ${raffle.metadata.name}`}</Typography>\r\n          <div className={classes.countdown}>\r\n            <Countdown endTimestamp={raffle.endTimestamp} spacing={'5%'} />\r\n          </div>\r\n          <RaffleInfoSection\r\n            raffle={raffle}\r\n            userConnected={!!draffleClient.provider.wallet.publicKey}\r\n            userTickets={entrant?.tickets}\r\n          />\r\n          <div className={classes.spacer} />\r\n          <Typography variant=\"overline\">Prizes</Typography>\r\n          <PrizeGalleryOngoing raffle={raffle} scrollRef={prizeGalleryRef} />\r\n          <div className={classes.spacer} />\r\n          {draffleClient.provider.wallet.publicKey ? (\r\n            <PurchaseTickets raffle={raffle} updateRaffle={updateRaffle} />\r\n          ) : (\r\n            <ConnectActionSection />\r\n          )}\r\n          <div className={classes.spacer} />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={classes.topSection}>\r\n            <div className={classes.raffleTitle}>\r\n              <div className={classes.leftTitleSection}>\r\n                <IconButton\r\n                  size=\"medium\"\r\n                  className={classes.backButton}\r\n                  onClick={() => push(routes.RAFFLES)}\r\n                >\r\n                  <ArrowBack />\r\n                </IconButton>\r\n              </div>\r\n              <div className={classes.middleTitleSection}>\r\n                <Typography variant=\"h1\">{`> ${raffle.metadata.name}`}</Typography>\r\n              </div>\r\n              <div className={classes.rightTitleSection}></div>\r\n            </div>\r\n            <div className={classes.countdown}>\r\n              <Countdown endTimestamp={raffle.endTimestamp} spacing={'5%'} />\r\n            </div>\r\n          </div>\r\n          <div className={classes.mainContent}>\r\n            <div className={classes.prizesSection}>\r\n              <Typography variant=\"overline\" className={classes.prizesHeader}>\r\n                Prizes\r\n                {raffle.prizes.length > 3 && (\r\n                  <>\r\n                    {' -'}\r\n                    <Button\r\n                      className={classes.labelPrizeAmount}\r\n                      variant=\"text\"\r\n                      disableRipple\r\n                      onClick={() =>\r\n                        prizeGalleryRef.current?.scrollIntoView({\r\n                          behavior: 'smooth',\r\n                          block: 'start',\r\n                        })\r\n                      }\r\n                    >\r\n                      <span>See all {raffle.prizes.length}</span>\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </Typography>\r\n              <PrizeShowcaseOngoing prizes={raffle.prizes} />\r\n            </div>\r\n            <div className={classes.detailsSection}>\r\n              <RaffleInfoSection\r\n                raffle={raffle}\r\n                userConnected={!!draffleClient.provider.wallet.publicKey}\r\n                userTickets={entrant?.tickets}\r\n              />\r\n              <div className={classes.actionSectionContainer}>\r\n                {draffleClient.provider.wallet.publicKey ? (\r\n                  <PurchaseTickets\r\n                    raffle={raffle}\r\n                    updateRaffle={updateRaffle}\r\n                  />\r\n                ) : (\r\n                  <ConnectActionSection />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {raffle.prizes.length > 3 && (\r\n            <>\r\n              <DoubleArrow className={classes.scrollIcon} />\r\n              <PrizeGalleryOngoing\r\n                raffle={raffle}\r\n                scrollRef={prizeGalleryRef}\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ConnectActionSection: FC = () => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n\r\n  return (\r\n    <div className={classes.actionSection}>\r\n      <div className={classes.actionSectionInner}>\r\n        <div className={classes.actionTagline}>\r\n          <Typography variant=\"h3\" className={classes.textHighlight}>\r\n            Tickets are still available.\r\n          </Typography>\r\n          <Typography variant=\"body1\">Don't miss out!</Typography>\r\n        </div>\r\n        <WalletMultiButton\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          className={`${classes.mainButton} ${classes.connectToBuyButton}`}\r\n        >\r\n          Connect to buy\r\n        </WalletMultiButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface IRaffleOngoingDetailsProps {\r\n  raffle: Raffle;\r\n  updateRaffle: () => void;\r\n}\r\n\r\nconst RaffleOngoingScreenWithLayout: FC<IRaffleOngoingDetailsProps> = (\r\n  props\r\n) => {\r\n  const { push } = useHistory();\r\n\r\n  console.log(\"raffle ongoing screen\")\r\n\r\n  return (\r\n    <Screen onBackNavigation={() => push(routes.RAFFLES)}>\r\n      <RaffleOngoingScreen {...props} />\r\n    </Screen>\r\n  );\r\n};\r\n\r\nexport default RaffleOngoingScreenWithLayout;\r\n","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\ExploreRafflesScreen\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Spacer\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Screen\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\ExploreRafflesScreen\\components\\FilterBar\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\RaffleCard\\index.tsx",["758"],"import React, { FC, HTMLAttributes, useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardMedia,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { ArrowForward } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { PrizeType, Raffle } from '../../lib/types';\r\nimport { routes } from '../../router/routes';\r\nimport Countdown from '../Countdown';\r\nimport { getDisplayAmount } from '../../lib/accounts';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../hooks/useViewport';\r\n\r\nexport interface RaffleCardProps extends HTMLAttributes<HTMLDivElement> {\r\n  raffle: Raffle;\r\n}\r\n\r\nconst MAX_TITLE_LENGTH = 20;\r\n\r\nconst RaffleCard: FC<RaffleCardProps> = ({\r\n  raffle,\r\n  className,\r\n  ...otherProps\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  const { push } = useHistory();\r\n  const [isEnded, setIsEnded] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timerId = setInterval(\r\n      () => setIsEnded(new Date() < raffle.endTimestamp),\r\n      1000\r\n    );\r\n    return () => clearInterval(timerId);\r\n  }, [raffle, setIsEnded]);\r\n\r\n  if (raffle.prizes.length === 0) return null;\r\n\r\n  const prize = raffle.prizes[0];\r\n  const imageUrl =\r\n    raffle.metadata.overviewImageUri\r\n      ? raffle.metadata.overviewImageUri\r\n      : prize.meta.imageUri;\r\n\r\n  return (\r\n    <Card\r\n      onClick={() => {\r\n        push(`${routes.RAFFLES}/${raffle.publicKey}`);\r\n      }}\r\n      className={`${classes.root} ${className}`}\r\n      {...otherProps}\r\n    >\r\n      <div className={classes.cardPrizesBadge}>\r\n        {raffle.prizes.length} prize{raffle.prizes.length > 1 && 's'}\r\n      </div>\r\n      {new Date() > raffle.endTimestamp && (\r\n        <div className={classes.cardEndedBadge}>Ended</div>\r\n      )}\r\n      {!isLoaded && (\r\n        <Skeleton\r\n          variant=\"rect\"\r\n          animation={'wave'}\r\n          classes={{\r\n            root: classes.media,\r\n          }}\r\n        />\r\n      )}\r\n      <CardMedia\r\n        component=\"img\"\r\n        className={classes.media}\r\n        src={imageUrl}\r\n        alt={prize.mint.name}\r\n        style={isLoaded ? {} : { display: 'none' }}\r\n        onLoad={() => setIsLoaded(true)}\r\n      />\r\n\r\n      <CardActions className={classes.raffleInfo}>\r\n        <div className={classes.detailsRow1}>\r\n          {raffle.metadata.name.length > MAX_TITLE_LENGTH ? (\r\n            <Tooltip title={raffle.metadata.name} placement=\"top\">\r\n              <div>{raffle.metadata.name.slice(0, MAX_TITLE_LENGTH - 4)} ...</div>\r\n            </Tooltip>\r\n          ) : (\r\n            raffle.metadata.name\r\n          )}\r\n        </div>\r\n        <div className={classes.detailsRow2}>\r\n          <div className={classes.ticketsSold}>\r\n            <div className={classes.label}>\r\n              <span className={classes.cardLabel}>Tickets sold</span>\r\n            </div>\r\n            {raffle.totalTickets}\r\n          </div>\r\n          <div className={classes.endingIn}>\r\n            <div className={classes.label}>\r\n              <span className={classes.cardLabel}>Ending in</span>\r\n            </div>\r\n            {isEnded ? <Countdown endTimestamp={raffle.endTimestamp} /> : '-'}\r\n          </div>\r\n        </div>\r\n        <div className={classes.detailsRow3}>\r\n          <div className={classes.ticketPrice}>\r\n            <div className={classes.label}>\r\n              <span className={classes.cardLabel}>Ticket price</span>\r\n            </div>\r\n            {getDisplayAmount(\r\n              raffle.proceeds.ticketPrice,\r\n              raffle.proceeds.mint\r\n            )}{' '}\r\n            {raffle.proceeds.mint.symbol}\r\n          </div>\r\n          <div>\r\n            <IconButton className={classes.goToRaffle}>\r\n              <ArrowForward />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RaffleCard;\r\n","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\ExploreRafflesScreen\\components\\FilterBar\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\assets\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\randomnessTools.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\actions\\claimPrize.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\RaffleCard\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\accounts.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PurchaseTicketsSection\\PurchaseTicket.tsx",["759","760","761"],"import {\r\n  ChangeEvent,\r\n  FC,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  CircularProgress,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { sleep } from '@project-serum/common';\r\nimport { u64 } from '@solana/spl-token';\r\nimport toast from 'react-hot-toast';\r\nimport {\r\n  AddBoxRounded,\r\n  AddCircleOutline,\r\n  IndeterminateCheckBoxRounded,\r\n  RemoveCircleOutline,\r\n} from '@material-ui/icons';\r\n\r\nimport { MAX_NUMBER_OF_PARTICIPANTS } from '../../../../config/misc';\r\nimport {\r\n  buyTickets,\r\n  BUY_TICKETS_TX_FEE_LAMPORTS,\r\n  calculateBasketPrice,\r\n} from '../../../../lib/actions/buyTickets';\r\nimport { PaymentOption, Raffle } from '../../../../lib/types';\r\nimport {\r\n  getDisplayAmount,\r\n  getBuyerATABalance,\r\n  getWalletLamports,\r\n} from '../../../../lib/accounts';\r\nimport Button from '../../../../components/Button';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { tokenInfoMap, wrappedSOL } from '../../../../config/tokenRegistry';\r\nimport { useProgramApis } from '../../../../hooks/useProgramApis';\r\nimport { useStyles } from './styles';\r\nimport { DispenserRegistryRaw } from '../../../../providers/ProgramApisProvider';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport ShortenedString from '../../../../components/ShortenedString';\r\n\r\nconst MAX_TICKET_AMOUNT = 1000;\r\n\r\nconst isLamportsEnough = (lamports: number | undefined) =>\r\n  (lamports ?? 0) >= BUY_TICKETS_TX_FEE_LAMPORTS;\r\n\r\ninterface AccountBalance {\r\n  mint: PublicKey;\r\n  amount: u64 | undefined;\r\n}\r\n\r\ninterface PurchaseTicketsProps {\r\n  raffle: Raffle;\r\n  updateRaffle: () => void;\r\n}\r\n\r\nexport const PurchaseTickets: FC<PurchaseTicketsProps> = ({\r\n  raffle,\r\n  updateRaffle,\r\n}) => {\r\n  const classes = { ...useCommonStyles(), ...useStyles() };\r\n  const { draffleClient, dispenserClient } = useProgramApis();\r\n\r\n  const [purchaseOngoing, setPurchaseOngoing] = useState(false);\r\n  const [walletLamports, setWalletLamports] = useState<number>();\r\n  // const [ticketPrice, setTicketPrice] = useState<PaymentOption>({\r\n  //   mint: raffle.proceeds.mint,\r\n  //   price: raffle.proceeds.ticketPrice,\r\n  //   price: raffle.proceeds.ticketPrice,\r\n  // });\r\n\r\n  const nativePaymentOption = useMemo(\r\n    () => ({\r\n      mint: raffle.proceeds.mint,\r\n      dispenserPriceIn: new u64(1),\r\n      dispenserPriceOut: new u64(1),\r\n    }),\r\n    [raffle]\r\n  );\r\n  const [paymentOption, setPaymentOption] =\r\n    useState<PaymentOption>(nativePaymentOption);\r\n  const [buyerATABalance, setBuyerATABalance] = useState<AccountBalance>({\r\n    mint: raffle.proceeds.mint.publicKey,\r\n    amount: undefined,\r\n  });\r\n  const [ticketAmount, setTicketAmount] = useState<number>(1);\r\n  const [dispensers, setDispensers] = useState<\r\n    { account: DispenserRegistryRaw; publicKey: PublicKey }[]\r\n  >([]);\r\n\r\n  const paymentOptions = useMemo(\r\n    () =>\r\n      (raffle.metadata.alternatePurchaseMints || []).reduce(\r\n        (acc, mintAddress) => {\r\n          if (!tokenInfoMap.has(mintAddress.toString())) {\r\n            console.log(\r\n              `Mint ${mintAddress.toString()} not found in token registry`\r\n            );\r\n            return acc;\r\n          }\r\n\r\n          const dispenser = dispensers.find(\r\n            (d) =>\r\n              d.account.mintTokenOut.toString() ===\r\n                raffle.proceeds.mint.publicKey.toString() &&\r\n              d.account.mintTokenIn.toString() === mintAddress.toString()\r\n          );\r\n          if (!dispenser) {\r\n            return acc;\r\n          }\r\n\r\n          const tokenInfo = tokenInfoMap.get(mintAddress.toString())!;\r\n          acc.set(mintAddress.toString(), {\r\n            mint: {\r\n              name: tokenInfo.name,\r\n              publicKey: mintAddress,\r\n              logoUrl: tokenInfo.logoURI,\r\n              symbol: tokenInfo.symbol,\r\n              decimals: tokenInfo.decimals,\r\n            },\r\n            dispenserPriceIn: dispenser.account.rateTokenIn,\r\n            dispenserPriceOut: dispenser.account.rateTokenOut,\r\n          });\r\n          return acc;\r\n        },\r\n        new Map<string, PaymentOption>([\r\n          [\r\n            raffle.proceeds.mint.publicKey.toString(),\r\n            {\r\n              mint: raffle.proceeds.mint,\r\n              dispenserPriceIn: new u64(1),\r\n              dispenserPriceOut: new u64(1),\r\n            },\r\n          ],\r\n        ])\r\n      ),\r\n    [raffle, dispensers]\r\n  );\r\n\r\n  const getBasketPrice = useCallback(\r\n    (ticketAmount: number) =>\r\n      calculateBasketPrice(\r\n        raffle.proceeds.ticketPrice,\r\n        ticketAmount,\r\n        paymentOption\r\n      ),\r\n    [raffle.proceeds.ticketPrice, paymentOption]\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispenserClient.account.registry.all().then(setDispensers);\r\n  }, [dispenserClient, setDispensers]);\r\n\r\n  useEffect(() => {\r\n    if (!draffleClient.provider.wallet?.publicKey) return;\r\n    let timerId: ReturnType<typeof setInterval>;\r\n\r\n    const updateLamports = async () => {\r\n      const newWalletLamports = await getWalletLamports(draffleClient.provider);\r\n      setWalletLamports(newWalletLamports);\r\n      if (\r\n        isLamportsEnough(walletLamports) &&\r\n        !(paymentOption.mint.publicKey.toBase58() === wrappedSOL)\r\n      ) {\r\n        clearInterval(timerId);\r\n      }\r\n    };\r\n\r\n    updateLamports();\r\n    timerId = setInterval(() => {\r\n      updateLamports();\r\n    }, 5000);\r\n    return () => clearInterval(timerId);\r\n  }, [\r\n    walletLamports,\r\n    draffleClient.provider,\r\n    draffleClient.provider.wallet.publicKey,\r\n    paymentOption.mint.publicKey,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!draffleClient.provider.wallet.publicKey) return;\r\n    async function updateBuyerATABalance() {\r\n      setBuyerATABalance({\r\n        mint: paymentOption.mint.publicKey,\r\n        amount: await getBuyerATABalance(\r\n          draffleClient.provider,\r\n          paymentOption.mint.publicKey\r\n        ),\r\n      });\r\n    }\r\n    const timerId = setInterval(() => {\r\n      updateBuyerATABalance();\r\n    }, 5000);\r\n    updateBuyerATABalance();\r\n    return () => clearInterval(timerId);\r\n  }, [\r\n    draffleClient.provider,\r\n    draffleClient.provider.wallet,\r\n    paymentOption.mint.publicKey,\r\n  ]);\r\n\r\n  const lamportsEnough = useMemo(\r\n    () => isLamportsEnough(walletLamports),\r\n    [walletLamports]\r\n  );\r\n  const buyerTokenBalance = useMemo(() => {\r\n    return paymentOption.mint.publicKey.toBase58() === wrappedSOL\r\n      ? {\r\n          mint: new PublicKey(wrappedSOL),\r\n          amount: new u64(walletLamports ?? 0),\r\n        } // We ignore the potential wSOL ATA\r\n      : buyerATABalance;\r\n  }, [walletLamports, buyerATABalance, paymentOption.mint.publicKey]);\r\n\r\n  const hasEnoughFunds = useMemo(() => {\r\n    const tokensEnough = buyerTokenBalance.amount?.gte(\r\n      getBasketPrice(ticketAmount)\r\n    );\r\n    return tokensEnough && lamportsEnough;\r\n  }, [buyerTokenBalance, lamportsEnough, ticketAmount, getBasketPrice]);\r\n\r\n  const maxTicketsToBuyable = useMemo(() => {\r\n    if (!buyerTokenBalance.amount) return new u64(0);\r\n    const newMax = buyerTokenBalance.amount\r\n      .mul(paymentOption.dispenserPriceOut)\r\n      .div(paymentOption.dispenserPriceIn)\r\n      .div(raffle.proceeds.ticketPrice);\r\n\r\n    if (\r\n      paymentOption.mint.publicKey.toString() ===\r\n        buyerTokenBalance.mint.toString() &&\r\n      newMax.ltn(ticketAmount)\r\n    )\r\n      setTicketAmount(newMax.toNumber());\r\n    return newMax;\r\n  }, [buyerTokenBalance, paymentOption]);\r\n\r\n  useEffect(() => {\r\n    let newTicketAmount = ticketAmount === 0 ? 1 : ticketAmount;\r\n    Math.min(ticketAmount, maxTicketsToBuyable.toNumber());\r\n    setTicketAmount(newTicketAmount);\r\n  }, [maxTicketsToBuyable, ticketAmount, setTicketAmount]);\r\n\r\n  const hasEnoughFundsToIncrementTicket = useMemo(() => {\r\n    const tokensEnough = buyerTokenBalance.amount?.gte(\r\n      getBasketPrice(ticketAmount + 1)\r\n    );\r\n    return tokensEnough && lamportsEnough;\r\n  }, [buyerTokenBalance, lamportsEnough, ticketAmount, getBasketPrice]);\r\n\r\n  const onBuyTickets = useCallback(async () => {\r\n    try {\r\n      setPurchaseOngoing(true);\r\n      const buyerATAExists = buyerATABalance.amount !== undefined;\r\n      await buyTickets(\r\n        draffleClient,\r\n        dispenserClient,\r\n        raffle,\r\n        ticketAmount,\r\n        paymentOption,\r\n        buyerATAExists\r\n      );\r\n      setTicketAmount(1);\r\n      await sleep(500);\r\n      updateRaffle();\r\n      toast.success(`You bought ${ticketAmount} ticket(s)`);\r\n    } catch (error: any) {\r\n      if (error.msg) {\r\n        toast.error(`Transaction failed: ${error.msg}`);\r\n      } else {\r\n        toast.error('Unexpected error');\r\n      }\r\n    }\r\n    setPurchaseOngoing(false);\r\n  }, [\r\n    draffleClient,\r\n    dispenserClient,\r\n    raffle,\r\n    ticketAmount,\r\n    paymentOption,\r\n    buyerATABalance,\r\n    setTicketAmount,\r\n    updateRaffle,\r\n  ]);\r\n\r\n  const onSelectPurchaseMint = (\r\n    event: ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>\r\n  ) => setPaymentOption(paymentOptions.get(event.target.value as string)!);\r\n\r\n  return (\r\n    <div className={`${classes.actionSection} ${classes.root}`}>\r\n      <Typography variant=\"h3\" className={classes.titleSection}>\r\n        Purchase Tickets\r\n      </Typography>\r\n      <div className={classes.amountLabel}>\r\n        <Typography variant=\"overline\">Amount</Typography>\r\n      </div>\r\n      <div className={classes.ticketAmountSection}>\r\n        <div className={classes.ticketAmountSectionLeft}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() =>\r\n              setTicketAmount((currentAmount) => Math.max(currentAmount - 1, 1))\r\n            }\r\n            disabled={ticketAmount <= 1}\r\n            className={classes.changeTicketAmountButton}\r\n          >\r\n            <IndeterminateCheckBoxRounded style={{ fontSize: 30 }} />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.ticketAmountSectionMiddle}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            className={classes.ticketAmountTextField}\r\n            value={ticketAmount}\r\n            onChange={(event) => {\r\n              const newValue = event.target.value;\r\n              const re = /^[0-9\\b]+$/;\r\n              if (newValue !== '' && !re.test(newValue)) return;\r\n\r\n              let numericValue = Math.min(\r\n                Math.min(\r\n                  Number(newValue),\r\n                  MAX_TICKET_AMOUNT - raffle.totalTickets\r\n                ),\r\n                maxTicketsToBuyable.toNumber()\r\n              );\r\n\r\n              setTicketAmount(numericValue);\r\n            }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"text\"\r\n                  disableRipple\r\n                  className={classes.maxButton}\r\n                  onClick={() => {\r\n                    let maxTickets = Math.min(\r\n                      MAX_TICKET_AMOUNT - raffle.totalTickets,\r\n                      maxTicketsToBuyable.toNumber()\r\n                    );\r\n                    setTicketAmount(maxTickets);\r\n                  }}\r\n                >\r\n                  MAX\r\n                </Button>\r\n              ),\r\n              startAdornment: (\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"text\"\r\n                  disableRipple\r\n                  className={classes.maxButton}\r\n                  onClick={() => setTicketAmount(1)}\r\n                >\r\n                  MIN\r\n                </Button>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.ticketAmountSectionRight}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() =>\r\n              setTicketAmount((currentAmount) => currentAmount + 1)\r\n            }\r\n            disabled={\r\n              raffle.totalTickets + ticketAmount >=\r\n                MAX_NUMBER_OF_PARTICIPANTS ||\r\n              !hasEnoughFundsToIncrementTicket ||\r\n              ticketAmount + 1 > MAX_TICKET_AMOUNT - raffle.totalTickets\r\n            }\r\n            className={classes.changeTicketAmountButton}\r\n          >\r\n            <AddBoxRounded style={{ fontSize: 30 }} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={classes.priceSection}>\r\n        <div className={classes.paymentOptionSection}>\r\n          <div className={classes.basketPrice}>\r\n            <Typography variant=\"overline\">Total Price</Typography>\r\n            <div\r\n              style={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\">\r\n                {getDisplayAmount(\r\n                  getBasketPrice(ticketAmount),\r\n                  paymentOption.mint\r\n                )}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <div className={classes.basketPrice}>\r\n            <Typography variant=\"overline\">Currency</Typography>\r\n            {paymentOptions.size === 1 ? (\r\n              <div className={classes.paymentOptionSelection}>\r\n                <Typography variant=\"h4\">\r\n                  {raffle.proceeds.mint.symbol}\r\n                </Typography>\r\n                <div className={classes.paymentOptionLogoContainer}>\r\n                  <img\r\n                    className={classes.paymentOptionLogo}\r\n                    src={raffle.proceeds.mint.logoUrl}\r\n                    alt={`Logo for ${raffle.proceeds.mint.name}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Select\r\n                variant=\"standard\"\r\n                label=\"Purchase mint\"\r\n                value={paymentOption.mint.publicKey.toString()}\r\n                onChange={onSelectPurchaseMint}\r\n                className={classes.paymentOptionSelect}\r\n                MenuProps={{\r\n                  disableScrollLock: true,\r\n                }}\r\n                renderValue={(optionKey) => {\r\n                  const option = paymentOptions.get(optionKey as string)!;\r\n                  return (\r\n                    <div className={classes.paymentOptionSelection}>\r\n                      <Typography variant=\"h4\">{option.mint.symbol}</Typography>\r\n                      <div className={classes.paymentOptionLogoContainer}>\r\n                        <img\r\n                          className={classes.paymentOptionLogo}\r\n                          src={option.mint.logoUrl}\r\n                          alt={`Logo for ${option.mint.name}`}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  Select purchase currency\r\n                </MenuItem>\r\n                {[...paymentOptions.values()].map(({ mint }) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={mint.publicKey.toString()}\r\n                      value={mint.publicKey.toString()}\r\n                      classes={{ root: classes.paymentOptionMenu }}\r\n                    >\r\n                      <div className={classes.paymentOptionLogoContainer}>\r\n                        <img\r\n                          className={classes.paymentOptionLogo}\r\n                          src={mint.logoUrl}\r\n                          alt={`Logo for ${mint.name}`}\r\n                        />\r\n                      </div>\r\n                      <Typography variant=\"body1\">\r\n                        <ShortenedString\r\n                          message={mint.name}\r\n                          maxCharLength={12}\r\n                        />\r\n                        {` (${mint.symbol})`}\r\n                      </Typography>\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.buySection}>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.mainButton}\r\n          onClick={onBuyTickets}\r\n          disabled={\r\n            ticketAmount === 0 ||\r\n            raffle.totalTickets + ticketAmount > MAX_NUMBER_OF_PARTICIPANTS ||\r\n            !hasEnoughFunds ||\r\n            purchaseOngoing\r\n          }\r\n        >\r\n          <div className={classes.purchaseButtonContent}>\r\n            {purchaseOngoing ? (\r\n              <>\r\n                <div className={classes.purchaseButtonContentLeft}>\r\n                  <CircularProgress\r\n                    size={20}\r\n                    className={classes.purchaseSpinner}\r\n                  />\r\n                </div>\r\n                <div className={classes.purchaseButtonContentMiddle}>\r\n                  Processing...\r\n                </div>\r\n                <div className={classes.purchaseButtonContentRight} />\r\n              </>\r\n            ) : (\r\n              <>Buy ticket {!lamportsEnough && '(Insufficient SOL)'}</>\r\n            )}\r\n          </div>\r\n        </Button>\r\n        <div className={classes.walletBalance}>\r\n          Wallet balance:{' '}\r\n          {buyerTokenBalance\r\n            ? getDisplayAmount(\r\n                buyerTokenBalance.amount || new u64(0),\r\n                paymentOption.mint\r\n              )\r\n            : 0}{' '}\r\n          {paymentOption.mint.symbol}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Base\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Body\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Header\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\RaffleInfoSection\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeGalleryEnded\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeShowcaseEnded\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\EndedRaffleActionsSection\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Countdown\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeGalleryOngoing\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeShowcaseOngoing\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Base\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Header\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Body\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\EndedRaffleActionsSection\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeShowcaseEnded\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeGalleryEnded\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\RaffleInfoSection\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Countdown\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeGalleryOngoing\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeShowcaseOngoing\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\NavButton\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\WalletButton\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Drawer\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\AirdropButton\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeCardEnded\\index.tsx",["762"],"import React, { FC, useMemo, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardClassKey,\r\n  CardMedia,\r\n  PaperProps,\r\n  StandardProps,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\n\r\nimport { Prize, PrizeType, Raffle } from '../../../../lib/types';\r\nimport useRandomDrawer from '../../../../hooks/useRandomDrawer';\r\nimport useCommonStyles from '../../../../assets/styles';\r\nimport { useStyles } from './styles';\r\nimport { shortenPubkeyString } from '../../../../lib/utils';\r\nimport { useViewport } from '../../../../hooks/useViewport';\r\nimport ShortenedString from '../../../../components/ShortenedString';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\nimport PrizeDetailsModal from '../../../../components/PrizeDetailsModal';\r\n\r\nexport interface PrizeCardEndedProps\r\n  extends StandardProps<PaperProps, CardClassKey> {\r\n  prize: Prize;\r\n  raffle: Raffle;\r\n  index?: number;\r\n  badgeText?: string;\r\n  winner?: number;\r\n}\r\n\r\nconst RandomTicketDrawer: FC<{ endRange: number }> = ({ endRange }) => {\r\n  const randomTicket = useRandomDrawer({ endRange });\r\n  return <>#{String((randomTicket || 0) + 1).padStart(4, '0')}</>;\r\n};\r\n\r\nconst PrizeCardEnded: FC<PrizeCardEndedProps> = ({\r\n  prize,\r\n  raffle,\r\n  index,\r\n  badgeText,\r\n  winner,\r\n  className,\r\n  ...otherProps\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = { ...useCommonStyles(), ...(useStyles({ device }) as any) };\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const imageUrl = prize.meta.imageUri;\r\n\r\n  const maxPrizeNameLength = useMemo(\r\n    () => (device === DeviceType.Phone ? 14 : 18),\r\n    [device]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PrizeDetailsModal\r\n        isOpen={isModalOpen}\r\n        setIsOpen={setIsModalOpen}\r\n        prize={prize}\r\n        prizeRank={index}\r\n      />\r\n      <Card\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}\r\n        {...otherProps}\r\n        className={`${classes.root} ${className}`}\r\n      >\r\n        {badgeText && <div className={classes.cardBadge}>{badgeText}</div>}\r\n        {!isLoaded && (\r\n          <div>\r\n            <Skeleton\r\n              variant=\"rect\"\r\n              animation={'wave'}\r\n              classes={{\r\n                root: classes.media,\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <CardMedia\r\n          component=\"img\"\r\n          className={classes.media}\r\n          src={imageUrl}\r\n          alt={prize.mint.name}\r\n          style={isLoaded ? {} : { display: 'none' }}\r\n          onLoad={() => setIsLoaded(true)}\r\n        />\r\n        <CardActions className={classes.prizeInfo}>\r\n          <div className={classes.prizeInfoInner}>\r\n            <div className={classes.prizeNameRow}>\r\n              <Typography variant=\"body1\">\r\n                {index !== undefined && `#${index + 1} `}\r\n              </Typography>\r\n              <Typography variant=\"body1\" className={classes.prizeName}>\r\n                <ShortenedString\r\n                  message={prize.mint.name}\r\n                  maxCharLength={maxPrizeNameLength}\r\n                  addTooltip\r\n                />\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.winnerSection}>\r\n              {winner !== undefined ? (\r\n                <div>\r\n                  <Typography variant=\"body1\">{`Winner: #${String(\r\n                    winner + 1\r\n                  ).padStart(4, '0')}`}</Typography>\r\n                  <div className={classes.winnerRow}>\r\n                    <Typography variant=\"body1\">Pubkey: </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      className={classes.winnerPubkey}\r\n                    >\r\n                      {shortenPubkeyString(raffle.entrantsRaw[winner])}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <Typography variant=\"body1\">Drawing...</Typography>\r\n                  <Typography variant=\"body1\" className={classes.winnertTicket}>\r\n                    <RandomTicketDrawer endRange={raffle.totalTickets} />\r\n                  </Typography>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrizeCardEnded;\r\n","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ClaimButton\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PurchaseTicketsSection\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\tokenRegistry.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeCardOngoing\\index.tsx",["763"],"import React, { FC, useMemo, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardClassKey,\r\n  CardMedia,\r\n  PaperProps,\r\n  StandardProps,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\n\r\nimport { Prize, PrizeType } from '../../../../lib/types';\r\nimport { useStyles } from './styles';\r\nimport { useViewport } from '../../../../hooks/useViewport';\r\nimport ShortenedString from '../../../../components/ShortenedString';\r\nimport { DeviceType } from '../../../../providers/ViewportProvider';\r\nimport PrizeDetailsModal from '../../../../components/PrizeDetailsModal';\r\n\r\nexport interface PrizeCardOngoingProps\r\n  extends StandardProps<PaperProps, CardClassKey> {\r\n  prize: Prize;\r\n  index?: number;\r\n}\r\n\r\nconst PrizeCardOngoing: FC<PrizeCardOngoingProps> = ({\r\n  prize,\r\n  index,\r\n  className,\r\n  ...otherProps\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const imageUrl = prize.meta.imageUri;\r\n\r\n  const maxPrizeNameLength = useMemo(\r\n    () => (device === DeviceType.Phone ? 14 : 18),\r\n    [device]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PrizeDetailsModal\r\n        isOpen={isModalOpen}\r\n        setIsOpen={setIsModalOpen}\r\n        prize={prize}\r\n        prizeRank={index}\r\n      />\r\n      <Card\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n        }}\r\n        {...otherProps}\r\n        className={`${classes.root} ${className}`}\r\n      >\r\n        {!isLoaded && (\r\n          <div>\r\n            <Skeleton\r\n              variant=\"rect\"\r\n              animation={'wave'}\r\n              classes={{\r\n                root: classes.media,\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <CardMedia\r\n          component=\"img\"\r\n          classes={{\r\n            root: classes.media,\r\n          }}\r\n          src={imageUrl}\r\n          alt={prize.mint.name}\r\n          style={isLoaded ? {} : { display: 'none' }}\r\n          onLoad={() => setIsLoaded(true)}\r\n        />\r\n        <CardActions className={classes.prizeInfo}>\r\n          <div className={classes.prizeNameRow}>\r\n            <Typography variant=\"body1\">\r\n              {index !== undefined && `#${index + 1} `}\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.prizeName}>\r\n              <ShortenedString\r\n                message={prize.mint.name}\r\n                maxCharLength={maxPrizeNameLength}\r\n                addTooltip\r\n              />\r\n            </Typography>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrizeCardOngoing;\r\n","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\utils\\airdrop.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\Drawer\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\WalletButton\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\layout\\NavButton\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ClaimButton\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeCardEnded\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\actions\\buyTickets.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\hooks\\useRandomDrawer.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\ShortenedString\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\Button\\index.tsx",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\config\\accounts.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\PrizeDetailsModal\\index.tsx",["764"],"import React, { FC } from 'react';\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  Fade,\r\n  IconButton,\r\n  Modal,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport { useViewport } from '../../hooks/useViewport';\r\nimport { Prize, PrizeType } from '../../lib/types';\r\nimport { useStyles } from './styles';\r\nimport { shortenPubkeyString } from '../../lib/utils';\r\nimport { Close, Launch } from '@material-ui/icons';\r\nimport Spacer from '../Spacer';\r\nimport { DeviceType } from '../../providers/ViewportProvider';\r\n\r\ninterface PrizeDetailsModalProps {\r\n  isOpen: boolean;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  prize: Prize;\r\n  prizeRank?: number;\r\n}\r\n\r\nconst PrizeDetailsModal: FC<PrizeDetailsModalProps> = ({\r\n  isOpen,\r\n  setIsOpen,\r\n  prize,\r\n  prizeRank,\r\n}) => {\r\n  const { device } = useViewport();\r\n  const classes = useStyles({ device });\r\n\r\n  const imageUrl = prize.meta.imageUri\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={() => {\r\n        setIsOpen(false);\r\n      }}\r\n      className={classes.modal}\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={isOpen}>\r\n        <div className={classes.content}>\r\n          <div className={classes.header}>\r\n            <IconButton size=\"small\" onClick={() => setIsOpen(false)}>\r\n              <Close />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.body}>\r\n            <div className={classes.contentLeft}>\r\n              <img\r\n                src={imageUrl}\r\n                className={classes.media}\r\n                alt={prize.mint.name}\r\n              />\r\n            </div>\r\n            <div className={classes.contentRight}>\r\n              <div>\r\n                <Typography variant=\"overline\">Codename</Typography>\r\n                <Typography variant=\"body1\">{prize.mint.name}</Typography>\r\n              </div>\r\n              <Spacer height={device === DeviceType.Phone ? '5px' : '10px'} />\r\n              {prizeRank !== undefined && (\r\n                <>\r\n                  <div>\r\n                    <Typography variant=\"overline\">Prize rank</Typography>\r\n                    <Typography variant=\"body1\">{prizeRank + 1}</Typography>\r\n                  </div>\r\n                  <Spacer\r\n                    height={device === DeviceType.Phone ? '5px' : '10px'}\r\n                  />\r\n                </>\r\n              )}\r\n              <div>\r\n                <Typography variant=\"overline\">Mint address</Typography>\r\n                <Typography variant=\"body1\">\r\n                  {shortenPubkeyString(prize.mint.publicKey)}\r\n                </Typography>\r\n              </div>\r\n              <Spacer height={device === DeviceType.Phone ? '5px' : '10px'} />\r\n              <Button\r\n                variant=\"text\"\r\n                size=\"small\"\r\n                disableRipple\r\n                onClick={() => {\r\n                  var win = window.open(\r\n                    `https://solscan.io/token/${prize.mint.publicKey.toString()}`,\r\n                    '_blank'\r\n                  );\r\n                  win?.focus();\r\n                }}\r\n                className={classes.ticketButton}\r\n              >\r\n                See on Solscan{' '}\r\n                <Launch\r\n                  style={{\r\n                    height: '17px',\r\n                    marginLeft: '5px',\r\n                  }}\r\n                />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PrizeDetailsModal;\r\n","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeCardOngoing\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\components\\PrizeDetailsModal\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\pages\\admin\\AdminHomeScreen\\styles.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\metadata\\index.ts",["765"],"import { METADATA_PROGRAM_ID } from './programIds';\r\nimport { deserializeUnchecked } from 'borsh';\r\nimport BN from 'bn.js';\r\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\nimport { StringPublicKey } from './utils';\r\nimport { extendBorsh } from './borsh';\r\nextendBorsh();\r\nexport const METADATA_PREFIX = 'metadata';\r\nexport const EDITION = 'edition';\r\nexport const RESERVATION = 'reservation';\r\n\r\nexport const MAX_NAME_LENGTH = 32;\r\n\r\nexport const MAX_SYMBOL_LENGTH = 10;\r\n\r\nexport const MAX_URI_LENGTH = 200;\r\n\r\nexport const MAX_CREATOR_LIMIT = 5;\r\n\r\nexport const MAX_CREATOR_LEN = 32 + 1 + 1;\r\nexport const MAX_METADATA_LEN =\r\n  1 +\r\n  32 +\r\n  32 +\r\n  MAX_NAME_LENGTH +\r\n  MAX_SYMBOL_LENGTH +\r\n  MAX_URI_LENGTH +\r\n  MAX_CREATOR_LIMIT * MAX_CREATOR_LEN +\r\n  2 +\r\n  1 +\r\n  1 +\r\n  198;\r\n\r\nexport const MAX_EDITION_LEN = 1 + 32 + 8 + 200;\r\n\r\nexport const EDITION_MARKER_BIT_SIZE = 248;\r\n\r\nexport enum MetadataKey {\r\n  Uninitialized = 0,\r\n  MetadataV1 = 4,\r\n  EditionV1 = 1,\r\n  MasterEditionV1 = 2,\r\n  MasterEditionV2 = 6,\r\n  EditionMarker = 7,\r\n}\r\n\r\nexport enum MetadataCategory {\r\n  Audio = 'audio',\r\n  Video = 'video',\r\n  Image = 'image',\r\n  VR = 'vr',\r\n}\r\n\r\nexport type MetadataFile = {\r\n  uri: string;\r\n  type: string;\r\n};\r\n\r\nexport type FileOrString = MetadataFile | string;\r\n\r\nexport type Attribute = {\r\n  trait_type?: string;\r\n  display_type?: string;\r\n  value: string | number;\r\n};\r\n\r\nexport interface IMetadataExtension {\r\n  name: string;\r\n  symbol: string;\r\n\r\n  creators: Creator[] | null;\r\n  description: string;\r\n  // preview image absolute URI\r\n  image: string;\r\n  animation_url?: string;\r\n\r\n  attributes?: Attribute[];\r\n\r\n  // stores link to item on meta\r\n  external_url: string;\r\n\r\n  seller_fee_basis_points: number;\r\n\r\n  properties: {\r\n    files?: FileOrString[];\r\n    category: MetadataCategory;\r\n    maxSupply?: number;\r\n    creators?: {\r\n      address: string;\r\n      shares: number;\r\n    }[];\r\n  };\r\n}\r\n\r\nexport class MasterEditionV1 {\r\n  key: MetadataKey;\r\n  supply: BN;\r\n  maxSupply?: BN;\r\n  /// Can be used to mint tokens that give one-time permission to mint a single limited edition.\r\n  printingMint: StringPublicKey;\r\n  /// If you don't know how many printing tokens you are going to need, but you do know\r\n  /// you are going to need some amount in the future, you can use a token from this mint.\r\n  /// Coming back to token metadata with one of these tokens allows you to mint (one time)\r\n  /// any number of printing tokens you want. This is used for instance by Auction Manager\r\n  /// with participation NFTs, where we dont know how many people will bid and need participation\r\n  /// printing tokens to redeem, so we give it ONE of these tokens to use after the auction is over,\r\n  /// because when the auction begins we just dont know how many printing tokens we will need,\r\n  /// but at the end we will. At the end it then burns this token with token-metadata to\r\n  /// get the printing tokens it needs to give to bidders. Each bidder then redeems a printing token\r\n  /// to get their limited editions.\r\n  oneTimePrintingAuthorizationMint: StringPublicKey;\r\n\r\n  constructor(args: {\r\n    key: MetadataKey;\r\n    supply: BN;\r\n    maxSupply?: BN;\r\n    printingMint: StringPublicKey;\r\n    oneTimePrintingAuthorizationMint: StringPublicKey;\r\n  }) {\r\n    this.key = MetadataKey.MasterEditionV1;\r\n    this.supply = args.supply;\r\n    this.maxSupply = args.maxSupply;\r\n    this.printingMint = args.printingMint;\r\n    this.oneTimePrintingAuthorizationMint =\r\n      args.oneTimePrintingAuthorizationMint;\r\n  }\r\n}\r\n\r\nexport class MasterEditionV2 {\r\n  key: MetadataKey;\r\n  supply: BN;\r\n  maxSupply?: BN;\r\n\r\n  constructor(args: { key: MetadataKey; supply: BN; maxSupply?: BN }) {\r\n    this.key = MetadataKey.MasterEditionV2;\r\n    this.supply = args.supply;\r\n    this.maxSupply = args.maxSupply;\r\n  }\r\n}\r\n\r\nexport class EditionMarker {\r\n  key: MetadataKey;\r\n  ledger: number[];\r\n\r\n  constructor(args: { key: MetadataKey; ledger: number[] }) {\r\n    this.key = MetadataKey.EditionMarker;\r\n    this.ledger = args.ledger;\r\n  }\r\n\r\n  editionTaken(edition: number) {\r\n    const editionOffset = edition % EDITION_MARKER_BIT_SIZE;\r\n    const indexOffset = Math.floor(editionOffset / 8);\r\n\r\n    if (indexOffset > 30) {\r\n      throw Error('bad index for edition');\r\n    }\r\n\r\n    const positionInBitsetFromRight = 7 - (editionOffset % 8);\r\n\r\n    const mask = Math.pow(2, positionInBitsetFromRight);\r\n\r\n    const appliedMask = this.ledger[indexOffset] & mask;\r\n\r\n    return appliedMask !== 0;\r\n  }\r\n}\r\n\r\nexport class Edition {\r\n  key: MetadataKey;\r\n  /// Points at MasterEdition struct\r\n  parent: StringPublicKey;\r\n  /// Starting at 0 for master record, this is incremented for each edition minted.\r\n  edition: BN;\r\n\r\n  constructor(args: {\r\n    key: MetadataKey;\r\n    parent: StringPublicKey;\r\n    edition: BN;\r\n  }) {\r\n    this.key = MetadataKey.EditionV1;\r\n    this.parent = args.parent;\r\n    this.edition = args.edition;\r\n  }\r\n}\r\nexport class Creator {\r\n  address: StringPublicKey;\r\n  verified: boolean;\r\n  share: number;\r\n\r\n  constructor(args: {\r\n    address: StringPublicKey;\r\n    verified: boolean;\r\n    share: number;\r\n  }) {\r\n    this.address = args.address;\r\n    this.verified = args.verified;\r\n    this.share = args.share;\r\n  }\r\n}\r\n\r\nexport class Data {\r\n  name: string;\r\n  symbol: string;\r\n  uri: string;\r\n  sellerFeeBasisPoints: number;\r\n  creators: Creator[] | null;\r\n  constructor(args: {\r\n    name: string;\r\n    symbol: string;\r\n    uri: string;\r\n    sellerFeeBasisPoints: number;\r\n    creators: Creator[] | null;\r\n  }) {\r\n    this.name = args.name;\r\n    this.symbol = args.symbol;\r\n    this.uri = args.uri;\r\n    this.sellerFeeBasisPoints = args.sellerFeeBasisPoints;\r\n    this.creators = args.creators;\r\n  }\r\n}\r\n\r\nexport class Metadata {\r\n  key: MetadataKey;\r\n  updateAuthority: StringPublicKey;\r\n  mint: StringPublicKey;\r\n  data: Data;\r\n  primarySaleHappened: boolean;\r\n  isMutable: boolean;\r\n  editionNonce: number | null;\r\n\r\n  // set lazy\r\n  masterEdition?: StringPublicKey;\r\n  edition?: StringPublicKey;\r\n\r\n  constructor(args: {\r\n    updateAuthority: StringPublicKey;\r\n    mint: StringPublicKey;\r\n    data: Data;\r\n    primarySaleHappened: boolean;\r\n    isMutable: boolean;\r\n    editionNonce: number | null;\r\n  }) {\r\n    this.key = MetadataKey.MetadataV1;\r\n    this.updateAuthority = args.updateAuthority;\r\n    this.mint = args.mint;\r\n    this.data = args.data;\r\n    this.primarySaleHappened = args.primarySaleHappened;\r\n    this.isMutable = args.isMutable;\r\n    this.editionNonce = args.editionNonce;\r\n  }\r\n\r\n  public async init() {\r\n    const edition = await getEdition(this.mint);\r\n    this.edition = edition;\r\n    this.masterEdition = edition;\r\n  }\r\n}\r\n\r\nclass CreateMetadataArgs {\r\n  instruction: number = 0;\r\n  data: Data;\r\n  isMutable: boolean;\r\n\r\n  constructor(args: { data: Data; isMutable: boolean }) {\r\n    this.data = args.data;\r\n    this.isMutable = args.isMutable;\r\n  }\r\n}\r\nclass UpdateMetadataArgs {\r\n  instruction: number = 1;\r\n  data: Data | null;\r\n  // Not used by this app, just required for instruction\r\n  updateAuthority: StringPublicKey | null;\r\n  primarySaleHappened: boolean | null;\r\n  constructor(args: {\r\n    data?: Data;\r\n    updateAuthority?: string;\r\n    primarySaleHappened: boolean | null;\r\n  }) {\r\n    this.data = args.data ? args.data : null;\r\n    this.updateAuthority = args.updateAuthority ? args.updateAuthority : null;\r\n    this.primarySaleHappened = args.primarySaleHappened;\r\n  }\r\n}\r\n\r\nclass CreateMasterEditionArgs {\r\n  instruction: number = 10;\r\n  maxSupply: BN | null;\r\n  constructor(args: { maxSupply: BN | null }) {\r\n    this.maxSupply = args.maxSupply;\r\n  }\r\n}\r\n\r\nclass MintPrintingTokensArgs {\r\n  instruction: number = 9;\r\n  supply: BN;\r\n\r\n  constructor(args: { supply: BN }) {\r\n    this.supply = args.supply;\r\n  }\r\n}\r\n\r\nexport const METADATA_SCHEMA = new Map<any, any>([\r\n  [\r\n    CreateMetadataArgs,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['instruction', 'u8'],\r\n        ['data', Data],\r\n        ['isMutable', 'u8'], // bool\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    UpdateMetadataArgs,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['instruction', 'u8'],\r\n        ['data', { kind: 'option', type: Data }],\r\n        ['updateAuthority', { kind: 'option', type: 'pubkeyAsString' }],\r\n        ['primarySaleHappened', { kind: 'option', type: 'u8' }],\r\n      ],\r\n    },\r\n  ],\r\n\r\n  [\r\n    CreateMasterEditionArgs,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['instruction', 'u8'],\r\n        ['maxSupply', { kind: 'option', type: 'u64' }],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    MintPrintingTokensArgs,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['instruction', 'u8'],\r\n        ['supply', 'u64'],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    MasterEditionV1,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['supply', 'u64'],\r\n        ['maxSupply', { kind: 'option', type: 'u64' }],\r\n        ['printingMint', 'pubkeyAsString'],\r\n        ['oneTimePrintingAuthorizationMint', 'pubkeyAsString'],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    MasterEditionV2,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['supply', 'u64'],\r\n        ['maxSupply', { kind: 'option', type: 'u64' }],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    Edition,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['parent', 'pubkeyAsString'],\r\n        ['edition', 'u64'],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    Data,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['name', 'string'],\r\n        ['symbol', 'string'],\r\n        ['uri', 'string'],\r\n        ['sellerFeeBasisPoints', 'u16'],\r\n        ['creators', { kind: 'option', type: [Creator] }],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    Creator,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['address', 'pubkeyAsString'],\r\n        ['verified', 'u8'],\r\n        ['share', 'u8'],\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    Metadata,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['updateAuthority', 'pubkeyAsString'],\r\n        ['mint', 'pubkeyAsString'],\r\n        ['data', Data],\r\n        ['primarySaleHappened', 'u8'], // bool\r\n        ['isMutable', 'u8'], // bool\r\n      ],\r\n    },\r\n  ],\r\n  [\r\n    EditionMarker,\r\n    {\r\n      kind: 'struct',\r\n      fields: [\r\n        ['key', 'u8'],\r\n        ['ledger', [31]],\r\n      ],\r\n    },\r\n  ],\r\n]);\r\n\r\n// eslint-disable-next-line no-control-regex\r\nconst METADATA_REPLACE = new RegExp('\\u0000', 'g');\r\n\r\nexport const decodeMetadata = (buffer: Buffer): Metadata => {\r\n  const metadata = deserializeUnchecked(\r\n    METADATA_SCHEMA,\r\n    Metadata,\r\n    buffer\r\n  ) as Metadata;\r\n  metadata.data.name = metadata.data.name.replace(METADATA_REPLACE, '');\r\n  metadata.data.uri = metadata.data.uri.replace(METADATA_REPLACE, '');\r\n  metadata.data.symbol = metadata.data.symbol.replace(METADATA_REPLACE, '');\r\n  return metadata;\r\n};\r\n\r\nexport async function getEdition(\r\n  tokenMint: StringPublicKey\r\n): Promise<StringPublicKey> {\r\n  return (\r\n    await PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from(METADATA_PREFIX),\r\n        METADATA_PROGRAM_ID.toBuffer(),\r\n        new PublicKey(tokenMint).toBuffer(),\r\n        Buffer.from(EDITION),\r\n      ],\r\n      METADATA_PROGRAM_ID\r\n    )\r\n  )[0].toBase58();\r\n}\r\n\r\nexport async function getMetadata(tokenMint: PublicKey): Promise<PublicKey> {\r\n  return (\r\n    await PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from(METADATA_PREFIX),\r\n        METADATA_PROGRAM_ID.toBuffer(),\r\n        tokenMint.toBuffer(),\r\n      ],\r\n      METADATA_PROGRAM_ID\r\n    )\r\n  )[0];\r\n}\r\n\r\nexport async function getNFTMetadata(\r\n  metadataAccountInfo: AccountInfo<Buffer>,\r\n): Promise<IMetadataExtension | undefined> {\r\n  const metadata = decodeMetadata(metadataAccountInfo.data);\r\n\r\n  try {\r\n    const result = await fetch(metadata.data.uri);\r\n    // We might need some more care here in case the data isn't valid\r\n    const metadataExtension = (await result.json()) as IMetadataExtension;\r\n    return metadataExtension;\r\n  } catch (e) {\r\n    console.log(e);\r\n    return;\r\n  }\r\n}\r\n","C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\metadata\\programIds.ts",[],"C:\\Users\\kroni\\Desktop\\RIFF RAFFLE SITE PNSC\\Riff-Raffle-Solana-NFT final\\app\\src\\lib\\metadata\\borsh.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\index.tsx",[],["766","767"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\reportWebVitals.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\App.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\router\\router.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\providers\\ViewportProvider.tsx",["768"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\providers\\RafflesStoreProvider.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\providers\\ProgramApisProvider.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\providers\\ThemeProvider.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\router\\routes.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Wallet\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ScrollToTop\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\anchorUtils.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\raffleWhitelist.ts",["769"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\programIds.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\assets\\theme.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\router\\raffleDetails.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\hooks\\useProgramApis.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\hooks\\useViewport.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\store\\index.ts",["770"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\utils\\index.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\misc.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\hooks\\useRafflesStore.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\AdminRoute\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\ExploreRafflesScreen\\index.tsx",["771"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\admin\\AdminHomeScreen\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\admin\\AdminRaffleScreen\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ScrollToTop\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\types.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\admin\\AdminRaffleScreen\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\index.tsx",["772"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\metadata\\index.ts",["773"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Spacer\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Screen\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\metadata\\borsh.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\metadata\\programIds.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Base\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Header\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Body\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Base\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Body\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Header\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\assets\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\randomnessTools.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\actions\\claimPrize.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\WalletButton\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\NavButton\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Drawer\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\AirdropButton\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PurchaseTicketsSection\\PurchaseTicket.tsx",["774","775","776"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\accounts.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\RaffleInfoSection\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\utils\\airdrop.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeShowcaseEnded\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeGalleryEnded\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\EndedRaffleActionsSection\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\Drawer\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\WalletButton\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\layout\\NavButton\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeGalleryOngoing\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeShowcaseOngoing\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Countdown\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PurchaseTicketsSection\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\tokenRegistry.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\lib\\actions\\buyTickets.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\RaffleInfoSection\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\EndedRaffleActionsSection\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeGalleryEnded\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeShowcaseEnded\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeGalleryOngoing\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Countdown\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeShowcaseOngoing\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ShortenedString\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\config\\accounts.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\Button\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeCardEnded\\index.tsx",["777"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ClaimButton\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeCardOngoing\\index.tsx",["778"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\ClaimButton\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleOngoingScreen\\components\\PrizeCardOngoing\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\RaffleEndedScreen\\components\\PrizeCardEnded\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\hooks\\useRandomDrawer.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\PrizeDetailsModal\\index.tsx",["779"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\PrizeDetailsModal\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\admin\\AdminHomeScreen\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\ExploreRafflesScreen\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\RaffleCard\\index.tsx",["780"],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\ExploreRafflesScreen\\components\\FilterBar\\index.tsx",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\components\\RaffleCard\\styles.ts",[],"C:\\Riff-Raffle-Solana-NFT build 1-1\\app\\src\\pages\\ExploreRafflesScreen\\components\\FilterBar\\styles.ts",[],{"ruleId":"781","replacedBy":"782"},{"ruleId":"783","replacedBy":"784"},{"ruleId":"785","severity":1,"message":"786","line":40,"column":6,"nodeType":"787","endLine":40,"endColumn":8,"suggestions":"788"},{"ruleId":"789","severity":1,"message":"790","line":1,"column":10,"nodeType":"791","messageId":"792","endLine":1,"endColumn":19},{"ruleId":"789","severity":1,"message":"793","line":2,"column":10,"nodeType":"791","messageId":"792","endLine":2,"endColumn":20},{"ruleId":"789","severity":1,"message":"794","line":12,"column":8,"nodeType":"791","messageId":"792","endLine":12,"endColumn":15},{"ruleId":"789","severity":1,"message":"795","line":20,"column":8,"nodeType":"791","messageId":"792","endLine":20,"endColumn":14},{"ruleId":"789","severity":1,"message":"796","line":13,"column":10,"nodeType":"791","messageId":"792","endLine":13,"endColumn":19},{"ruleId":"789","severity":1,"message":"797","line":22,"column":3,"nodeType":"791","messageId":"792","endLine":22,"endColumn":19},{"ruleId":"789","severity":1,"message":"798","line":24,"column":3,"nodeType":"791","messageId":"792","endLine":24,"endColumn":22},{"ruleId":"785","severity":1,"message":"799","line":243,"column":6,"nodeType":"787","endLine":243,"endColumn":40,"suggestions":"800"},{"ruleId":"789","severity":1,"message":"796","line":13,"column":17,"nodeType":"791","messageId":"792","endLine":13,"endColumn":26},{"ruleId":"789","severity":1,"message":"796","line":13,"column":17,"nodeType":"791","messageId":"792","endLine":13,"endColumn":26},{"ruleId":"789","severity":1,"message":"796","line":12,"column":17,"nodeType":"791","messageId":"792","endLine":12,"endColumn":26},{"ruleId":"789","severity":1,"message":"801","line":4,"column":23,"nodeType":"791","messageId":"792","endLine":4,"endColumn":33},{"ruleId":"781","replacedBy":"802"},{"ruleId":"783","replacedBy":"803"},{"ruleId":"785","severity":1,"message":"786","line":40,"column":6,"nodeType":"787","endLine":40,"endColumn":8,"suggestions":"804"},{"ruleId":"789","severity":1,"message":"790","line":1,"column":10,"nodeType":"791","messageId":"792","endLine":1,"endColumn":19},{"ruleId":"789","severity":1,"message":"793","line":2,"column":10,"nodeType":"791","messageId":"792","endLine":2,"endColumn":20},{"ruleId":"789","severity":1,"message":"794","line":12,"column":8,"nodeType":"791","messageId":"792","endLine":12,"endColumn":15},{"ruleId":"789","severity":1,"message":"795","line":20,"column":8,"nodeType":"791","messageId":"792","endLine":20,"endColumn":14},{"ruleId":"789","severity":1,"message":"801","line":4,"column":23,"nodeType":"791","messageId":"792","endLine":4,"endColumn":33},{"ruleId":"789","severity":1,"message":"797","line":22,"column":3,"nodeType":"791","messageId":"792","endLine":22,"endColumn":19},{"ruleId":"789","severity":1,"message":"798","line":24,"column":3,"nodeType":"791","messageId":"792","endLine":24,"endColumn":22},{"ruleId":"785","severity":1,"message":"799","line":243,"column":6,"nodeType":"787","endLine":243,"endColumn":40,"suggestions":"805"},{"ruleId":"789","severity":1,"message":"796","line":13,"column":17,"nodeType":"791","messageId":"792","endLine":13,"endColumn":26},{"ruleId":"789","severity":1,"message":"796","line":13,"column":17,"nodeType":"791","messageId":"792","endLine":13,"endColumn":26},{"ruleId":"789","severity":1,"message":"796","line":12,"column":17,"nodeType":"791","messageId":"792","endLine":12,"endColumn":26},{"ruleId":"789","severity":1,"message":"796","line":13,"column":10,"nodeType":"791","messageId":"792","endLine":13,"endColumn":19},"no-native-reassign",["806"],"no-negated-in-lhs",["807"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.","ArrayExpression",["808"],"@typescript-eslint/no-unused-vars","'PublicKey' is defined but never used.","Identifier","unusedVar","'connection' is defined but never used.","'topLogo' is defined but never used.","'Spacer' is defined but never used.","'PrizeType' is defined but never used.","'AddCircleOutline' is defined but never used.","'RemoveCircleOutline' is defined but never used.","React Hook useMemo has missing dependencies: 'raffle.proceeds.ticketPrice' and 'ticketAmount'. Either include them or remove the dependency array.",["809"],"'Connection' is defined but never used.",["806"],["807"],["810"],["811"],"no-global-assign","no-unsafe-negation",{"desc":"812","fix":"813"},{"desc":"814","fix":"815"},{"desc":"812","fix":"816"},{"desc":"814","fix":"817"},"Update the dependencies array to be: [device]",{"range":"818","text":"819"},"Update the dependencies array to be: [buyerTokenBalance.amount, buyerTokenBalance.mint, paymentOption.dispenserPriceIn, paymentOption.dispenserPriceOut, paymentOption.mint.publicKey, raffle.proceeds.ticketPrice, ticketAmount]",{"range":"820","text":"821"},{"range":"822","text":"819"},{"range":"823","text":"821"},[1115,1117],"[device]",[7467,7501],"[buyerTokenBalance.amount, buyerTokenBalance.mint, paymentOption.dispenserPriceIn, paymentOption.dispenserPriceOut, paymentOption.mint.publicKey, raffle.proceeds.ticketPrice, ticketAmount]",[1115,1117],[7467,7501]]